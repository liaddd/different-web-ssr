{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport \"./Authorization.scss\";\nimport AuthorizationStep1 from \"./Authorization/AuthorizationStep1\";\nimport AuthorizationStep2 from \"./Authorization/AuthorizationStep2\";\nimport ModalAuthorization from \"../../components/Modal/ModalAuthorization\";\nimport ModalLoader from \"../../components/Modal/ModalLoader\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showBlockUser: false\n    });\n\n    _defineProperty(this, \"hendleBlockUser\", () => {\n      this.setState({\n        showBlockUser: true\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"authorization-page\"\n    }, __jsx(\"header\", {\n      className: \"authorization-header\"\n    }, __jsx(\"div\", {\n      className: \"block-logo\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"div\", {\n      className: \"logo\"\n    })))), __jsx(\"div\", {\n      className: \"authorization-container\"\n    }, __jsx(\"div\", {\n      className: \"authorization-block-img authorization-img\"\n    }), this.props.user.successMessage ? __jsx(AuthorizationStep2, {\n      hendleBlockUser: this.hendleBlockUser\n    }) : __jsx(AuthorizationStep1, {\n      hendleBlockUser: this.hendleBlockUser\n    })), __jsx(ModalAuthorization, {\n      show: this.state.showBlockUser\n    }), __jsx(ModalLoader, {\n      show: this.props.user.showModal\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/pages/signin/SignIn.js"],"names":["React","Component","Fragment","connect","Link","AuthorizationStep1","AuthorizationStep2","ModalAuthorization","ModalLoader","SignIn","showBlockUser","setState","render","props","user","successMessage","hendleBlockUser","state","showModal","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,sBAAP;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACrB;AAAES,MAAAA,aAAa,EAAE;AAAjB,KADqB;;AAAA,6CAEX,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAED,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,KAJ4B;AAAA;;AAK7BE,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,QAAD,QACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAQ,MAAA,SAAS,EAAC;AAAlB,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,MADF,CADF,CADF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,MADF,EAEG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,GACC,MAAC,kBAAD;AAAoB,MAAA,eAAe,EAAE,KAAKC;AAA1C,MADD,GAGC,MAAC,kBAAD;AAAoB,MAAA,eAAe,EAAE,KAAKA;AAA1C,MALJ,CARF,EAgBE,MAAC,kBAAD;AAAoB,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWP;AAArC,MAhBF,EAiBE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,IAAX,CAAgBI;AAAnC,MAjBF,CADF,CADF;AAuBD;;AA7B4B;;AAgC/B,MAAMC,eAAe,GAAGF,KAAK,KAAK;AAChCH,EAAAA,IAAI,EAAEG,KAAK,CAACH;AADoB,CAAL,CAA7B;;AAIA,SAASM,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,EAAP;AACD;;AAED,eAAelB,OAAO,CACpBgB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbX,MAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\n\nimport \"./Authorization.scss\";\nimport AuthorizationStep1 from \"./Authorization/AuthorizationStep1\";\nimport AuthorizationStep2 from \"./Authorization/AuthorizationStep2\";\nimport ModalAuthorization from \"../../components/Modal/ModalAuthorization\";\nimport ModalLoader from \"../../components/Modal/ModalLoader\";\n\nclass SignIn extends Component {\n  state = { showBlockUser: false };\n  hendleBlockUser = () => {\n    this.setState({ showBlockUser: true });\n  };\n  render() {\n    return (\n      <Fragment>\n        <div className=\"authorization-page\">\n          <header className=\"authorization-header\">\n            <div className=\"block-logo\">\n              <Link href=\"/\">\n                <div className=\"logo\"></div>\n              </Link>\n            </div>\n          </header>\n          <div className=\"authorization-container\">\n            <div className=\"authorization-block-img authorization-img\" />\n            {this.props.user.successMessage ? (\n              <AuthorizationStep2 hendleBlockUser={this.hendleBlockUser} />\n            ) : (\n              <AuthorizationStep1 hendleBlockUser={this.hendleBlockUser} />\n            )}\n          </div>\n          <ModalAuthorization show={this.state.showBlockUser} />\n          <ModalLoader show={this.props.user.showModal} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}