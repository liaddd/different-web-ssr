{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./../Authorization.scss\";\nimport UserActions from \"../../../actions/users/users.actions\";\nimport Validator from \"./../../../utils/validate\";\nimport Api from \"./../../../utils/requestClient/requests\";\nimport { get } from \"lodash\";\n\nvar AuthorizationStep1 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthorizationStep1, _Component);\n\n  function AuthorizationStep1(props) {\n    var _this;\n\n    _classCallCheck(this, AuthorizationStep1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthorizationStep1).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      asyncError: {\n        errorText: \"undefined request error\",\n        errorState: false\n      },\n      phone: {\n        // please it will translate to hebrew if it need\n        errorText: Validator.constants.PhoneErrorText,\n        errorState: false\n      },\n      checker: {\n        // please it will translate to hebrew if it need\n        errorText: Validator.constants.CheckboxErrorText,\n        errorState: false\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitForm\", function (e) {\n      e.preventDefault();\n\n      _this.validatePhone();\n\n      _this.validateChecker();\n\n      if (_this.validatePhone() && _this.validateChecker()) {\n        var phoneFormat = _this.authorizationInput.value;\n        phoneFormat = phoneFormat[0] === \"0\" ? phoneFormat.replace(/^0/, \"+972\") : phoneFormat;\n        var requestData = {\n          phone: phoneFormat,\n          device_type: \"web\",\n          device_name: \"web\",\n          os_version: \"1\",\n          is_agent: false\n        };\n\n        _this.props.onSetUserData({\n          showModal: true\n        });\n\n        Api.login(requestData).then(function (data) {\n          if (_this.state.asyncError.errorState) {\n            _this.setState(function (prevState) {\n              return _objectSpread({}, prevState, _objectSpread({}, prevState.asyncError, {\n                asyncError: {\n                  errorText: \"\",\n                  errorState: false\n                }\n              }));\n            });\n          }\n\n          data.data.phone = phoneFormat;\n          data.data.showModal = false;\n\n          _this.props.onSetUserData(data.data);\n        })[\"catch\"](function (err) {\n          _this.props.onSetUserData({\n            showModal: false\n          });\n\n          if (get(err, \"response.data.errorCode\") === \"BLOCKED_USER\") {\n            _this.props.hendleBlockUser();\n          }\n\n          _this.setState(function (prevState) {\n            return _objectSpread({}, prevState, _objectSpread({}, prevState.asyncError, {\n              asyncError: {\n                errorText: \"מספר הטלפון שהוזן אינו תקין\",\n                errorState: true\n              }\n            }));\n          });\n        });\n      }\n    });\n\n    _this.authorizationInput = React.createRef();\n    _this.authorizationChecker = React.createRef();\n    return _this;\n  }\n\n  _createClass(AuthorizationStep1, [{\n    key: \"validatePhone\",\n    // validatePhone is short validate callback function\n    value: function validatePhone() {\n      var authorizationInput = this.authorizationInput;\n      var inputValidation = Validator.validate.validate(Validator.constants.IsraelPhoneNumberRegex, authorizationInput.value, Validator.constants.PhoneErrorValidation);\n\n      if (inputValidation.error) {\n        this.setState(function (prevState, props) {\n          return _objectSpread({}, prevState, _objectSpread({}, prevState.phone, {\n            phone: {\n              errorText: inputValidation.error,\n              errorState: true\n            }\n          }));\n        });\n      } else {\n        this.setState(function (prevState) {\n          return _objectSpread({}, prevState, _objectSpread({}, prevState.phone, {\n            phone: {\n              errorText: inputValidation.error,\n              errorState: false\n            }\n          }));\n        });\n      }\n\n      return inputValidation.valid;\n    } // validateChecker is short validate callback function\n\n  }, {\n    key: \"validateChecker\",\n    value: function validateChecker() {\n      var authorizationChecker = this.authorizationChecker;\n      var inputValidation = Validator.validate.validate(Validator.constants.InputCheckerRegex, authorizationChecker.checked, Validator.constants.CheckboxErrorText);\n\n      if (inputValidation.error) {\n        this.setState(function (prevState, props) {\n          return _objectSpread({}, prevState, _objectSpread({}, prevState.checker, {\n            checker: {\n              errorText: inputValidation.error,\n              errorState: true\n            }\n          }));\n        });\n      } else {\n        this.setState(function (prevState) {\n          return _objectSpread({}, prevState, _objectSpread({}, prevState.checker, {\n            checker: {\n              errorText: inputValidation.error,\n              errorState: false\n            }\n          }));\n        });\n      }\n\n      return inputValidation.valid;\n    } // onSubmitForm is action to submit form\n\n  }, {\n    key: \"render\",\n    // render\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Fragment, null, __jsx(\"div\", {\n        className: \"authorization-block\"\n      }, __jsx(\"div\", {\n        className: \"authorization-block-form\"\n      }, __jsx(\"div\", {\n        className: \"authorization-block-title\"\n      }, __jsx(\"div\", {\n        className: \"authorization-title\"\n      }, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF \\u05DC\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\\u05D5\\u05EA\")), __jsx(\"form\", {\n        className: \"authorization-form\",\n        id: \"authorization-form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmitForm(e);\n        },\n        noValidate: true\n      }, __jsx(\"div\", {\n        className: \"authorization-block-input\"\n      }, __jsx(\"input\", {\n        className: \"authorization-input-tel input-tel authorization-input\",\n        type: \"tel\",\n        autoFocus: true,\n        ref: function ref(node) {\n          return _this2.authorizationInput = node;\n        },\n        dir: \"ltr\"\n      }), this.state.phone.errorState ? __jsx(\"span\", {\n        className: \"authorization-input-error\"\n      }, this.state.phone.errorText) : null, this.state.asyncError.errorState ? __jsx(\"span\", {\n        className: \"authorization-input-error\"\n      }, this.state.asyncError.errorText) : null, this.state.checker.errorState ? __jsx(\"span\", {\n        className: \"authorization-input-error\"\n      }, this.state.checker.errorText) : null), __jsx(\"div\", {\n        className: \"authorization-block-description\"\n      }, \"\\u05D0\\u05E0\\u05D5 \\u05E0\\u05E9\\u05DC\\u05D7 \\u05D0\\u05DC\\u05D9\\u05D9\\u05DA \\u05E7\\u05D5\\u05D3 \\u05DC\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8 \\u05DE\\u05E1\\u05E4\\u05E8 \\u05D4\\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\"), __jsx(\"div\", {\n        className: \"authorization-block-checkbox\"\n      }, __jsx(\"input\", {\n        className: \"authorization-input-checkbox input-checkbox\",\n        id: \"authorization-checkbox\",\n        type: \"checkbox\",\n        ref: function ref(node) {\n          return _this2.authorizationChecker = node;\n        }\n      }), __jsx(\"label\", {\n        className: \"authorization-label-checkbox\",\n        htmlFor: \"authorization-checkbox\"\n      }, \"\\u05D0\\u05D9\\u05E9\\u05E8\\u05EA\\u05D9 \\u05D0\\u05EA\\xA0\", __jsx(\"a\", {\n        href: \"https://diffe-rent.s3-eu-west-1.amazonaws.com/%D7%AA%D7%A7%D7%A0%D7%95%D7%9F-+DiffeRent.pdf\",\n        target: \"_blank\"\n      }, \"\\u05D4\\u05EA\\u05E7\\u05E0\\u05D5\\u05DF\"))), __jsx(\"div\", {\n        className: \"authorization-block-submit\"\n      }, __jsx(\"input\", {\n        className: \"authorization-submit input-submit btn-blue btn-large\",\n        id: \"authorization-submit\",\n        type: \"submit\",\n        value: \"\\u05E9\\u05DC\\u05D9\\u05D7\\u05D4\"\n      }))))));\n    }\n  }]);\n\n  return AuthorizationStep1;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userPhone: state.user.phone\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetUserData: function onSetUserData(action) {\n      dispatch(UserActions.setUserData(action));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps)(AuthorizationStep1);\nexport default withConnect;","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/pages/signin/Authorization/AuthorizationStep1.js"],"names":["React","Component","Fragment","connect","UserActions","Validator","Api","get","AuthorizationStep1","props","asyncError","errorText","errorState","phone","constants","PhoneErrorText","checker","CheckboxErrorText","e","preventDefault","validatePhone","validateChecker","phoneFormat","authorizationInput","value","replace","requestData","device_type","device_name","os_version","is_agent","onSetUserData","showModal","login","then","data","state","setState","prevState","err","hendleBlockUser","createRef","authorizationChecker","inputValidation","validate","IsraelPhoneNumberRegex","PhoneErrorValidation","error","valid","InputCheckerRegex","checked","onSubmitForm","node","mapStateToProps","userPhone","user","mapDispatchToProps","dispatch","action","setUserData","withConnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./../Authorization.scss\";\nimport UserActions from \"../../../actions/users/users.actions\";\nimport Validator from \"./../../../utils/validate\";\nimport Api from \"./../../../utils/requestClient/requests\";\nimport { get } from \"lodash\";\n\nclass AuthorizationStep1 extends Component {\n  constructor(props) {\n    super(props);\n    this.authorizationInput = React.createRef();\n    this.authorizationChecker = React.createRef();\n  }\n\n  state = {\n    asyncError: {\n      errorText: \"undefined request error\",\n      errorState: false\n    },\n\n    phone: {\n      // please it will translate to hebrew if it need\n      errorText: Validator.constants.PhoneErrorText,\n      errorState: false\n    },\n    checker: {\n      // please it will translate to hebrew if it need\n      errorText: Validator.constants.CheckboxErrorText,\n      errorState: false\n    }\n  };\n\n  // validatePhone is short validate callback function\n  validatePhone() {\n    const { authorizationInput } = this;\n    const inputValidation = Validator.validate.validate(\n      Validator.constants.IsraelPhoneNumberRegex,\n      authorizationInput.value,\n      Validator.constants.PhoneErrorValidation\n    );\n    if (inputValidation.error) {\n      this.setState((prevState, props) => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.phone,\n            ...{\n              phone: {\n                errorText: inputValidation.error,\n                errorState: true\n              }\n            }\n          }\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.phone,\n            ...{\n              phone: {\n                errorText: inputValidation.error,\n                errorState: false\n              }\n            }\n          }\n        };\n      });\n    }\n\n    return inputValidation.valid;\n  }\n\n  // validateChecker is short validate callback function\n  validateChecker() {\n    const { authorizationChecker } = this;\n    const inputValidation = Validator.validate.validate(\n      Validator.constants.InputCheckerRegex,\n      authorizationChecker.checked,\n      Validator.constants.CheckboxErrorText\n    );\n\n    if (inputValidation.error) {\n      this.setState((prevState, props) => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.checker,\n            ...{\n              checker: {\n                errorText: inputValidation.error,\n                errorState: true\n              }\n            }\n          }\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.checker,\n            ...{\n              checker: {\n                errorText: inputValidation.error,\n                errorState: false\n              }\n            }\n          }\n        };\n      });\n    }\n\n    return inputValidation.valid;\n  }\n\n  // onSubmitForm is action to submit form\n  onSubmitForm = e => {\n    e.preventDefault();\n\n    this.validatePhone();\n    this.validateChecker();\n\n    if (this.validatePhone() && this.validateChecker()) {\n      let phoneFormat = this.authorizationInput.value;\n      phoneFormat =\n        phoneFormat[0] === \"0\"\n          ? phoneFormat.replace(/^0/, \"+972\")\n          : phoneFormat;\n      const requestData = {\n        phone: phoneFormat,\n        device_type: \"web\",\n        device_name: \"web\",\n        os_version: \"1\",\n        is_agent: false\n      };\n      this.props.onSetUserData({ showModal: true });\n      Api.login(requestData)\n        .then(data => {\n          if (this.state.asyncError.errorState) {\n            this.setState(prevState => {\n              return {\n                ...prevState,\n                ...{\n                  ...prevState.asyncError,\n                  ...{\n                    asyncError: {\n                      errorText: \"\",\n                      errorState: false\n                    }\n                  }\n                }\n              };\n            });\n          }\n          data.data.phone = phoneFormat;\n          data.data.showModal = false;\n          this.props.onSetUserData(data.data);\n        })\n        .catch(err => {\n          this.props.onSetUserData({ showModal: false });\n          if (get(err, \"response.data.errorCode\") === \"BLOCKED_USER\") {\n            this.props.hendleBlockUser();\n          }\n          this.setState(prevState => {\n            return {\n              ...prevState,\n              ...{\n                ...prevState.asyncError,\n                ...{\n                  asyncError: {\n                    errorText: \"מספר הטלפון שהוזן אינו תקין\",\n                    errorState: true\n                  }\n                }\n              }\n            };\n          });\n        });\n    }\n  };\n\n  // render\n  render() {\n    return (\n      <Fragment>\n        <div className=\"authorization-block\">\n          <div className=\"authorization-block-form\">\n            <div className=\"authorization-block-title\">\n              <div className=\"authorization-title\">מספר טלפון להתחברות</div>\n            </div>\n            <form\n              className=\"authorization-form\"\n              id=\"authorization-form\"\n              onSubmit={e => this.onSubmitForm(e)}\n              noValidate\n            >\n              <div className=\"authorization-block-input\">\n                <input\n                  className=\"authorization-input-tel input-tel authorization-input\"\n                  type=\"tel\"\n                  autoFocus\n                  ref={node => (this.authorizationInput = node)}\n                  dir=\"ltr\"\n                />\n                {this.state.phone.errorState ? (\n                  <span className=\"authorization-input-error\">\n                    {this.state.phone.errorText}\n                  </span>\n                ) : null}\n                {this.state.asyncError.errorState ? (\n                  <span className=\"authorization-input-error\">\n                    {this.state.asyncError.errorText}\n                  </span>\n                ) : null}\n                {this.state.checker.errorState ? (\n                  <span className=\"authorization-input-error\">\n                    {this.state.checker.errorText}\n                  </span>\n                ) : null}\n              </div>\n              <div className=\"authorization-block-description\">\n                אנו נשלח אלייך קוד לאישור מספר הטלפון\n              </div>\n              <div className=\"authorization-block-checkbox\">\n                <input\n                  className=\"authorization-input-checkbox input-checkbox\"\n                  id=\"authorization-checkbox\"\n                  type=\"checkbox\"\n                  ref={node => (this.authorizationChecker = node)}\n                />\n                <label\n                  className=\"authorization-label-checkbox\"\n                  htmlFor=\"authorization-checkbox\"\n                >\n                  אישרתי את&nbsp;\n                  <a\n                    href=\"https://diffe-rent.s3-eu-west-1.amazonaws.com/%D7%AA%D7%A7%D7%A0%D7%95%D7%9F-+DiffeRent.pdf\"\n                    target=\"_blank\"\n                  >\n                    התקנון\n                  </a>\n                </label>\n              </div>\n              <div className=\"authorization-block-submit\">\n                <input\n                  className=\"authorization-submit input-submit btn-blue btn-large\"\n                  id=\"authorization-submit\"\n                  type=\"submit\"\n                  value=\"שליחה\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userPhone: state.user.phone\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    }\n  };\n};\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthorizationStep1);\n\nexport default withConnect;\n"]},"metadata":{},"sourceType":"module"}