{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport ChevronDown from \"./../../public/icons/chevron-down-icon.svg\";\nimport HeaderActions from \"../../actions/header/header.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { logout } from \"../../actions/common/common.actions\";\n\nvar Account =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Account, _Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n    _this.setWrapperRef = _this.setWrapperRef.bind(_assertThisInitialized(_this));\n    _this.handleClickOutside = _this.handleClickOutside.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n    /**\n     * Set the wrapper ref\n     */\n\n  }, {\n    key: \"setWrapperRef\",\n    value: function setWrapperRef(node) {\n      this.wrapperRef = node;\n    }\n    /**\n     * handleClickOutside detect if clicked on outside of element\n     */\n\n  }, {\n    key: \"handleClickOutside\",\n    value: function handleClickOutside(event) {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n        this.props.onSetToggleMenu(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          firsName = _this$props.firsName,\n          lastName = _this$props.lastName;\n      return __jsx(Fragment, null, __jsx(\"div\", {\n        className: \"drop-menu-block\",\n        ref: this.setWrapperRef\n      }, __jsx(\"button\", {\n        className: \"btn btn-white btn-medium\",\n        onClick: function onClick() {\n          _this2.props.onSetToggleMenu(!_this2.props.toggleMenu);\n        }\n      }, firsName, \" \", lastName, __jsx(\"img\", {\n        src: ChevronDown,\n        className: \"icon-chevron-down\",\n        alt: \"\"\n      })), this.props.toggleMenu ? __jsx(\"nav\", {\n        className: \"drop-menu\"\n      }, __jsx(Link, {\n        href: \"/signin\"\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          _this2.props.onLogout();\n\n          localStorage.clear();\n        },\n        className: \"drop-menu-link\"\n      }, __jsx(\"span\", {\n        className: \"icon icon-avatar\"\n      }), \"\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9 \\u05D7\\u05D3\\u05E9\")), __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", {\n        onClick: function onClick() {\n          _this2.props.onLogout();\n\n          localStorage.clear();\n        },\n        className: \"drop-menu-link\"\n      }, __jsx(\"span\", {\n        className: \"icon icon-cog\"\n      }), \"\\u05D4\\u05EA\\u05E0\\u05EA\\u05E7\"))) : null));\n    }\n  }]);\n\n  return Account;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    toggleMenu: state.header.toggleMenu,\n    userAuth: state.user.auth,\n    firsName: state.user.first_name,\n    lastName: state.user.last_name\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetToggleMenu: function onSetToggleMenu(action) {\n      dispatch(HeaderActions.accountMenuToggle(action));\n    },\n    setUserData: function setUserData(action) {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: function onLogout(action) {\n      dispatch(logout(action));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","map":null,"metadata":{},"sourceType":"module"}