{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport ChevronDown from \"./../../public/icons/chevron-down-icon.svg\";\nimport HeaderActions from \"../../actions/header/header.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { logout } from \"../../actions/common/common.actions\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n  /**\n   * Set the wrapper ref\n   */\n\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * handleClickOutside detect if clicked on outside of element\n   */\n\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.onSetToggleMenu(false);\n    }\n  }\n\n  render() {\n    const {\n      firsName,\n      lastName\n    } = this.props;\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"drop-menu-block\",\n      ref: this.setWrapperRef\n    }, __jsx(\"button\", {\n      className: \"btn btn-white btn-medium\",\n      onClick: () => {\n        this.props.onSetToggleMenu(!this.props.toggleMenu);\n      }\n    }, firsName, \" \", lastName, __jsx(\"img\", {\n      src: ChevronDown,\n      className: \"icon-chevron-down\",\n      alt: \"\"\n    })), this.props.toggleMenu ? __jsx(\"nav\", {\n      className: \"drop-menu\"\n    }, __jsx(Link, {\n      href: \"/signin\"\n    }, __jsx(\"a\", {\n      onClick: () => {\n        this.props.onLogout();\n        localStorage.clear();\n      },\n      className: \"drop-menu-link\"\n    }, __jsx(\"span\", {\n      className: \"icon icon-avatar\"\n    }), \"\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9 \\u05D7\\u05D3\\u05E9\")), __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      onClick: () => {\n        this.props.onLogout();\n        localStorage.clear();\n      },\n      className: \"drop-menu-link\"\n    }, __jsx(\"span\", {\n      className: \"icon icon-cog\"\n    }), \"\\u05D4\\u05EA\\u05E0\\u05EA\\u05E7\"))) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    toggleMenu: state.header.toggleMenu,\n    userAuth: state.user.auth,\n    firsName: state.user.first_name,\n    lastName: state.user.last_name\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetToggleMenu: action => {\n      dispatch(HeaderActions.accountMenuToggle(action));\n    },\n    setUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","map":null,"metadata":{},"sourceType":"module"}