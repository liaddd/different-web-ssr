{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport cn from \"classnames\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport Router from \"next/router\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport he from \"date-fns/locale/he\";\nimport \"./ReactDatePicker.scss\";\nimport { stepper } from \"../../actions/forms/forms.actions\";\nimport { STEPPER_STEP4 } from \"../../actions/forms/forms.actions.constants\";\nimport validator from \"../../utils/validate\";\nimport requestClient from \"../../utils/requestClient/requests\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { get } from \"lodash\";\nimport { logout } from \"../../actions/common/common.actions\";\nimport \"./PersonalInfo.scss\";\nconst DEFAULT_ERROR = \"value isn't valid \";\nconst DEFAULT_DATE_FORMAT = \"y M d\";\nconst NOT_EMPTY_DATE_FORMAT = \"y/M/d\";\nconst MAX_PRICE = 7000;\nconst MIN_PRICE = 1000;\nregisterLocale(\"he\", he);\n\nclass PersonalInfoStep4 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      price: this.props.user.price || void 0,\n      enterDate: get(this.props, \"user.entry_date\") ? new Date(this.props.user.entry_date) : null,\n      leaveDate: get(this.props, \"user.exit_date\") ? new Date(this.props.user.exit_date) : null,\n      priceValidate: {\n        error: void 0\n      },\n      leaveDateValidate: {\n        error: void 0\n      },\n      enterDateValidate: {\n        error: void 0\n      }\n    });\n\n    _defineProperty(this, \"onChangeLeaveDate\", date => {\n      this.setState({\n        leaveDate: date\n      });\n    });\n\n    _defineProperty(this, \"onChangeEnterDate\", date => {\n      this.setState({\n        enterDate: date\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault();\n      let price = validator.validate.validate(validator.constants.InputStringRegex, this.state.price, DEFAULT_ERROR);\n\n      if (_parseInt(this.state.price) >= MAX_PRICE) {\n        price.error = \"שכר דירה חודשי מקסימלי: 7,000\";\n      }\n\n      if (_parseInt(this.state.price) <= MIN_PRICE) {\n        price.error = \"שכר דירה חודשי מינימלי: 1,000\";\n      }\n\n      if (price && price.error) {\n        this.setState({\n          priceValidate: {\n            error: price.error\n          }\n        });\n      } else {\n        this.setState({\n          priceValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let enterDate = validator.validate.validate(validator.constants.InputStringRegex, this.state.enterDate, DEFAULT_ERROR);\n\n      if (enterDate && enterDate.error) {\n        this.setState({\n          enterDateValidate: {\n            error: enterDate.error\n          }\n        });\n      } else {\n        this.setState({\n          enterDateValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let leaveDate = validator.validate.validate(validator.constants.InputStringRegex, this.state.leaveDate, DEFAULT_ERROR);\n\n      if (leaveDate && leaveDate.error) {\n        this.setState({\n          leaveDateValidate: {\n            error: leaveDate.error\n          }\n        });\n      } else {\n        this.setState({\n          leaveDateValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      if (price.valid && enterDate.valid && leaveDate.valid && !price.error) {\n        this.props.onSetUserData({\n          showModal: true\n        });\n        requestClient.step4({\n          property_id: this.props.user.id,\n          price: _parseInt(this.state.price),\n          property_type: 1,\n          exit_date: this.state.leaveDate.toLocaleString(),\n          entry_date: this.state.enterDate.toLocaleString()\n        }, this.props.user.auth.session_token).then(data => {\n          data.data.showModal = false;\n          this.props.onSetUserData(data.data);\n          this.props.onSetStepper({\n            activeStep: 4,\n            step4: {\n              edit: true\n            }\n          }); // TODO: move route name to constant\n\n          Router.push(\"/card\");\n        }).catch(error => {\n          console.error(error);\n          this.props.onSetUserData({\n            showModal: false\n          });\n\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            this.props.onLogout();\n            Router.push(\"/\");\n          }\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.props.height && scroll.scrollTo(this.props.height - this.props.height / 2);\n  }\n\n  render() {\n    const {\n      activeStep\n    } = this.props.stepper;\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: cn({\n        \"personal-info-section\": true,\n        \"personal-info-section-4\": true,\n        \"personal-info-section-active\": activeStep === STEPPER_STEP4\n      })\n    }, __jsx(\"form\", {\n      className: \"personal-info-form\",\n      id: \"personal-info-form\",\n      noValidate: true,\n      onSubmit: e => this.onSubmit(e)\n    }, __jsx(\"div\", {\n      className: \"personal-info-form-container form-container\"\n    }, __jsx(\"div\", {\n      className: \"input-block-row width-max\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-city\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.price,\n        \"input-error\": this.state.priceValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"number\",\n      id: \"input-personal-info-city\",\n      placeholder: \"\\xA0\",\n      value: this.state.price,\n      onChange: e => {\n        this.setState({\n          price: e.target.value\n        });\n      }\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"\\u05E9\\u05DB\\u05E8 \\u05D4\\u05D3\\u05D9\\u05E8\\u05D4 \\u05D1\\u05D4\\u05E1\\u05DB\\u05DD \\u05D4\\u05E9\\u05DB\\u05D9\\u05E8\\u05D5\\u05EA\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.priceValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, this.state.priceValidate.error))), __jsx(\"div\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-house-number\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": !!this.state.enterDate,\n        \"input-error\": this.state.enterDateValidate.error !== void 0\n      })\n    }, __jsx(DatePicker, {\n      selected: this.state.enterDate ? this.state.enterDate : null,\n      onChange: date => this.onChangeEnterDate(date),\n      className: \"input-text input-text-grey input-date-picker\",\n      minDate: new Date(),\n      locale: \"he\",\n      dateFormat: this.state.enterDate ? NOT_EMPTY_DATE_FORMAT : DEFAULT_DATE_FORMAT\n    }), __jsx(\"span\", {\n      className: \"input-label-span-date\"\n    }, \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA \\u05DB\\u05E0\\u05D9\\u05E1\\u05D4 \\u05DC\\u05D3\\u05D9\\u05E8\\u05D4\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.enterDateValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"require\"))), __jsx(\"div\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-street\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": !!this.state.leaveDate,\n        \"input-error\": this.state.leaveDateValidate.error !== void 0\n      })\n    }, __jsx(DatePicker, {\n      selected: this.state.leaveDate ? this.state.leaveDate : null,\n      onChange: this.onChangeLeaveDate,\n      className: \"input-text input-text-grey input-date-picker\",\n      minDate: this.state.enterDate ? this.state.enterDate : new Date(),\n      locale: \"he\",\n      dateFormat: this.state.leaveDate ? NOT_EMPTY_DATE_FORMAT : DEFAULT_DATE_FORMAT\n    }), __jsx(\"span\", {\n      className: \"input-label-span-date\"\n    }, \"\\u05EA\\u05D0\\u05E8\\u05D9\\u05DA \\u05D9\\u05E6\\u05D9\\u05D0\\u05D4 \\u05DE\\u05D4\\u05D3\\u05D9\\u05E8\\u05D4\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.leaveDateValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"require\")))), __jsx(\"div\", {\n      className: \"btn-block\"\n    }, __jsx(\"input\", {\n      className: \"input-submit btn-blue btn-small btn-bold\",\n      id: \"personal-info-submit\",\n      type: \"submit\",\n      value: \"\\u05D4\\u05DE\\u05E9\\u05DA\"\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetStepper: action => {\n      dispatch(stepper(action));\n    },\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)(PersonalInfoStep4);\nexport default withConnect;","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/pages/personal-info/PersonalInfoStep4.js"],"names":["React","Component","Fragment","connect","cn","animateScroll","scroll","Router","DatePicker","registerLocale","he","stepper","STEPPER_STEP4","validator","requestClient","UserActions","get","logout","DEFAULT_ERROR","DEFAULT_DATE_FORMAT","NOT_EMPTY_DATE_FORMAT","MAX_PRICE","MIN_PRICE","PersonalInfoStep4","price","props","user","enterDate","Date","entry_date","leaveDate","exit_date","priceValidate","error","leaveDateValidate","enterDateValidate","date","setState","e","preventDefault","validate","constants","InputStringRegex","state","valid","onSetUserData","showModal","step4","property_id","id","property_type","toLocaleString","auth","session_token","then","data","onSetStepper","activeStep","edit","push","catch","console","onLogout","componentDidMount","height","scrollTo","render","onSubmit","target","value","onChangeEnterDate","onChangeLeaveDate","mapStateToProps","forms","mapDispatchToProps","dispatch","action","setUserData","withConnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport cn from \"classnames\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport Router from \"next/router\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport he from \"date-fns/locale/he\";\nimport \"./ReactDatePicker.scss\";\n\nimport { stepper } from \"../../actions/forms/forms.actions\";\nimport { STEPPER_STEP4 } from \"../../actions/forms/forms.actions.constants\";\nimport validator from \"../../utils/validate\";\nimport requestClient from \"../../utils/requestClient/requests\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { get } from \"lodash\";\nimport { logout } from \"../../actions/common/common.actions\";\nimport \"./PersonalInfo.scss\";\nconst DEFAULT_ERROR = \"value isn't valid \";\nconst DEFAULT_DATE_FORMAT = \"y M d\";\nconst NOT_EMPTY_DATE_FORMAT = \"y/M/d\";\nconst MAX_PRICE = 7000;\nconst MIN_PRICE = 1000;\nregisterLocale(\"he\", he);\n\nclass PersonalInfoStep4 extends Component {\n  state = {\n    price: this.props.user.price || void 0,\n    enterDate: get(this.props, \"user.entry_date\")\n      ? new Date(this.props.user.entry_date)\n      : null,\n    leaveDate: get(this.props, \"user.exit_date\")\n      ? new Date(this.props.user.exit_date)\n      : null,\n    priceValidate: {\n      error: void 0\n    },\n    leaveDateValidate: {\n      error: void 0\n    },\n    enterDateValidate: {\n      error: void 0\n    }\n  };\n\n  componentDidMount() {\n    this.props.height &&\n      scroll.scrollTo(this.props.height - this.props.height / 2);\n  }\n\n  onChangeLeaveDate = date => {\n    this.setState({ leaveDate: date });\n  };\n\n  onChangeEnterDate = date => {\n    this.setState({ enterDate: date });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    let price = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      this.state.price,\n      DEFAULT_ERROR\n    );\n\n    if (parseInt(this.state.price) >= MAX_PRICE) {\n      price.error = \"שכר דירה חודשי מקסימלי: 7,000\";\n    }\n    if (parseInt(this.state.price) <= MIN_PRICE) {\n      price.error = \"שכר דירה חודשי מינימלי: 1,000\";\n    }\n\n    if (price && price.error) {\n      this.setState({ priceValidate: { error: price.error } });\n    } else {\n      this.setState({ priceValidate: { error: void 0 } });\n    }\n\n    let enterDate = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      this.state.enterDate,\n      DEFAULT_ERROR\n    );\n    if (enterDate && enterDate.error) {\n      this.setState({ enterDateValidate: { error: enterDate.error } });\n    } else {\n      this.setState({ enterDateValidate: { error: void 0 } });\n    }\n\n    let leaveDate = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      this.state.leaveDate,\n      DEFAULT_ERROR\n    );\n    if (leaveDate && leaveDate.error) {\n      this.setState({ leaveDateValidate: { error: leaveDate.error } });\n    } else {\n      this.setState({ leaveDateValidate: { error: void 0 } });\n    }\n    if (price.valid && enterDate.valid && leaveDate.valid && !price.error) {\n      this.props.onSetUserData({ showModal: true });\n\n      requestClient\n        .step4(\n          {\n            property_id: this.props.user.id,\n            price: parseInt(this.state.price),\n            property_type: 1,\n            exit_date: this.state.leaveDate.toLocaleString(),\n            entry_date: this.state.enterDate.toLocaleString()\n          },\n          this.props.user.auth.session_token\n        )\n        .then(data => {\n          data.data.showModal = false;\n\n          this.props.onSetUserData(data.data);\n\n          this.props.onSetStepper({\n            activeStep: 4,\n            step4: {\n              edit: true\n            }\n          });\n          // TODO: move route name to constant\n          Router.push(\"/card\");\n        })\n        .catch(error => {\n          console.error(error);\n          this.props.onSetUserData({ showModal: false });\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            this.props.onLogout();\n            Router.push(\"/\");\n          }\n        });\n    }\n  };\n\n  render() {\n    const { activeStep } = this.props.stepper;\n    return (\n      <Fragment>\n        <div\n          className={cn({\n            \"personal-info-section\": true,\n            \"personal-info-section-4\": true,\n            \"personal-info-section-active\": activeStep === STEPPER_STEP4\n          })}\n        >\n          <form\n            className=\"personal-info-form\"\n            id=\"personal-info-form\"\n            noValidate\n            onSubmit={e => this.onSubmit(e)}\n          >\n            <div className=\"personal-info-form-container form-container\">\n              <div className=\"input-block-row width-max\">\n                <label\n                  htmlFor=\"input-personal-info-city\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\": this.state.price,\n                    \"input-error\": this.state.priceValidate.error !== void 0\n                  })}\n                >\n                  <input\n                    className=\"input-text input-text-grey\"\n                    type=\"number\"\n                    id=\"input-personal-info-city\"\n                    placeholder=\"&nbsp;\"\n                    value={this.state.price}\n                    onChange={e => {\n                      this.setState({ price: e.target.value });\n                    }}\n                  />\n                  <span className=\"input-label-span\">\n                    שכר הדירה בהסכם השכירות\n                  </span>\n                  <span className=\"input-border\"></span>\n                  {this.state.priceValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      {this.state.priceValidate.error}\n                    </span>\n                  )}\n                </label>\n              </div>\n              <div className=\"input-block-row\">\n                <label\n                  htmlFor=\"input-personal-info-house-number\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\": !!this.state.enterDate,\n                    \"input-error\": this.state.enterDateValidate.error !== void 0\n                  })}\n                >\n                  <DatePicker\n                    selected={\n                      this.state.enterDate ? this.state.enterDate : null\n                    }\n                    onChange={date => this.onChangeEnterDate(date)}\n                    className=\"input-text input-text-grey input-date-picker\"\n                    minDate={new Date()}\n                    locale=\"he\"\n                    dateFormat={\n                      this.state.enterDate\n                        ? NOT_EMPTY_DATE_FORMAT\n                        : DEFAULT_DATE_FORMAT\n                    }\n                  />\n                  {/* <DatePicker\n                    dir=\"ltr\"\n                    className=\"input-text input-text-grey input-date-picker\"\n                    onChange={this.onChangeEnterDate}\n                    value={this.state.enterDate ? this.state.enterDate : \"\"}\n                    clearIcon={null}\n                    calendarIcon={null}\n                    format={\n                      this.state.enterDate\n                        ? NOT_EMPTY_DATE_FORMAT\n                        : DEFAULT_DATE_FORMAT\n                    }\n                    locale={\"he-He\"}\n                    minDate={new Date()}\n                  /> */}\n\n                  <span className=\"input-label-span-date\">\n                    תאריך כניסה לדירה\n                  </span>\n                  <span className=\"input-border\"></span>\n                  {this.state.enterDateValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      require\n                    </span>\n                  )}\n                </label>\n              </div>\n              <div className=\"input-block-row\">\n                <label\n                  htmlFor=\"input-personal-info-street\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\": !!this.state.leaveDate,\n                    \"input-error\": this.state.leaveDateValidate.error !== void 0\n                  })}\n                >\n                  <DatePicker\n                    selected={\n                      this.state.leaveDate ? this.state.leaveDate : null\n                    }\n                    onChange={this.onChangeLeaveDate}\n                    className=\"input-text input-text-grey input-date-picker\"\n                    minDate={\n                      this.state.enterDate ? this.state.enterDate : new Date()\n                    }\n                    locale=\"he\"\n                    dateFormat={\n                      this.state.leaveDate\n                        ? NOT_EMPTY_DATE_FORMAT\n                        : DEFAULT_DATE_FORMAT\n                    }\n                  />\n                  {/* <DatePicker\n                    dir=\"ltr\"\n                    className=\"input-text input-text-grey input-date-picker\"\n                    onChange={this.onChangeLeaveDate}\n                    value={this.state.leaveDate ? this.state.leaveDate : null}\n                    clearIcon={null}\n                    calendarIcon={null}\n                    format={\n                      this.state.leaveDate\n                        ? NOT_EMPTY_DATE_FORMAT\n                        : DEFAULT_DATE_FORMAT\n                    }\n                    locale={\"he-He\"}\n                    placeholderText={false}\n                    minDate={\n                      this.state.enterDate ? this.state.enterDate : new Date()\n                    }\n                  /> */}\n\n                  <span className=\"input-label-span-date\">\n                    תאריך יציאה מהדירה\n                  </span>\n                  <span className=\"input-border\"></span>\n                  {this.state.leaveDateValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      require\n                    </span>\n                  )}\n                </label>\n              </div>\n            </div>\n            <div className=\"btn-block\">\n              <input\n                className=\"input-submit btn-blue btn-small btn-bold\"\n                id=\"personal-info-submit\"\n                type=\"submit\"\n                value=\"המשך\"\n              />\n            </div>\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetStepper: action => {\n      dispatch(stepper(action));\n    },\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PersonalInfoStep4);\n\nexport default withConnect;\n"]},"metadata":{},"sourceType":"module"}