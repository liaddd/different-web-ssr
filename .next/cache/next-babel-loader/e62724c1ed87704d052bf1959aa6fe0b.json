{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport Router from \"next/router\";\nimport cn from \"classnames\";\nimport { STEPPER_STEP1 } from \"./../../actions/forms/forms.actions.constants\";\nimport { stepper } from \"./../../actions/forms/forms.actions\";\nimport validator from \"./../../utils/validate/index\";\nimport requestClient from \"./../../utils/requestClient/requests\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { logout } from \"../../actions/common/common.actions\";\nconst DEFAULT_ERROR = \"value isn't valid \";\n\nclass PersonalInfoStep1 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      first_name: null,\n      last_name: null,\n      id_number: null,\n      phone: null,\n      first_nameValidate: {\n        error: void 0\n      },\n      last_nameValidate: {\n        error: void 0\n      },\n      id_numberValidate: {\n        error: void 0\n      },\n      phoneValidate: {\n        error: void 0\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault();\n      let first_name = validator.validate.validate(validator.constants.InputStringRegex, this.state.first_name, DEFAULT_ERROR);\n\n      if (first_name && first_name.error) {\n        this.setState({\n          first_nameValidate: {\n            error: first_name.error\n          }\n        });\n      } else {\n        this.setState({\n          first_nameValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let last_name = validator.validate.validate(validator.constants.InputStringRegex, this.state.last_name, DEFAULT_ERROR);\n\n      if (last_name && last_name.error) {\n        this.setState({\n          last_nameValidate: {\n            error: last_name.error\n          }\n        });\n      } else {\n        this.setState({\n          last_nameValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let id_number = validator.validate.validate(validator.constants.IdNumberRegex, this.state.id_number, DEFAULT_ERROR);\n\n      if (id_number && id_number.error) {\n        this.setState({\n          id_numberValidate: {\n            error: id_number.error\n          }\n        });\n      } else {\n        this.setState({\n          id_numberValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let phone = validator.validate.validate(validator.constants.IsraelPhoneNumberRegex, this.state.phone, DEFAULT_ERROR);\n\n      if (phone && phone.error) {\n        this.setState({\n          phoneValidate: {\n            error: phone.error\n          }\n        });\n      } else {\n        this.setState({\n          phoneValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      if (first_name.valid && last_name.valid && id_number.valid && phone.valid) {\n        this.props.onSetUserData({\n          showModal: true\n        });\n        requestClient.step1({\n          flow_type: \"EXIST_TENANT\",\n          id_number: this.state.id_number,\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          birth_date: \"19/01/1980\"\n          /* ,\n          \"landlord_phone\": this.props.user.phone,\n          \"email\": \"template@template.com\" */\n\n        }, this.props.user.auth.session_token).then(data => {\n          data.data.showModal = false;\n          this.props.onSetUserData(data.data);\n          this.props.onSetStepper({\n            activeStep: 2,\n            step1: {\n              edit: true\n            }\n          });\n          Router.push(\"/personal-info\", \"/personal-info/2\", {\n            shallow: true\n          });\n        }).catch(error => {\n          if (get(error, \"response.data.errorCode\") === \"INVALID_ID\") {\n            this.setState({\n              id_numberValidate: {\n                error: \"*ת.ז לא תקינה\"\n              }\n            });\n          }\n\n          this.props.onSetUserData({\n            showModal: false\n          });\n\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            this.props.onLogout();\n            Router.push(\"/\");\n          }\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChangeState\", (e, value, type) => {\n      e.preventDefault();\n      this.setState({\n        [type]: value\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n\n  render() {\n    const {\n      activeStep\n    } = this.props.stepper;\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: cn({\n        \"personal-info-section\": true,\n        \"personal-info-section-1\": true,\n        \"personal-info-section-active\": activeStep === STEPPER_STEP1\n      })\n    }, __jsx(\"form\", {\n      className: \"personal-info-form\",\n      id: \"personal-info-form\",\n      onSubmit: this.onSubmit\n    }, __jsx(\"div\", {\n      className: \"personal-info-form-container form-container\"\n    }, __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-first-name\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.first_name && this.state.first_name.length > 0,\n        \"input-error\": this.state.first_nameValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"text\",\n      id: \"input-personal-first-name\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"first_name\"),\n      value: this.state.first_name ? this.state.first_name : \"\"\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05E9\\u05DD \\u05E4\\u05E8\\u05D8\\u05D9\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.first_nameValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"*\\u05E9\\u05DD \\u05DC\\u05D0 \\u05E0\\u05DB\\u05D5\\u05DF\"))), __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-last-name\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.last_name && this.state.last_name.length > 0,\n        \"input-error\": this.state.last_nameValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"text\",\n      id: \"input-personal-info-last-name\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"last_name\"),\n      value: this.state.last_name ? this.state.last_name : \"\"\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05E9\\u05DD \\u05DE\\u05E9\\u05E4\\u05D7\\u05D4\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.last_nameValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"\\u05E9\\u05DD \\u05DC\\u05D0 \\u05E0\\u05DB\\u05D5\\u05DF\"))), __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-id-number\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.id_number && this.state.id_number.length > 0,\n        \"input-error\": this.state.id_numberValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"number\",\n      id: \"input-personal-info-id-number\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"id_number\"),\n      value: this.state.id_number ? this.state.id_number : \"\"\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05DE\\u05E1\\u05E4\\u05E8 \\u05EA.\\u05D6\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.id_numberValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"*\\u05EA.\\u05D6 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05E0\\u05D4\"))), __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-phone-number\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.phone && this.state.phone.length > 0,\n        \"input-error\": this.state.phoneValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"tel\",\n      dir: \"auto\",\n      style: {\n        textAlign: \"end\"\n      },\n      id: \"input-personal-info-phone-number\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"phone\"),\n      value: this.state.phone ? this.state.phone : \"\"\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.phoneValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"*\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\")))), __jsx(\"div\", {\n      className: \"btn-block\"\n    }, __jsx(\"input\", {\n      className: \"input-submit btn-blue btn-small btn-bold\",\n      id: \"personal-info-submit\",\n      type: \"submit\",\n      value: \"\\u05D4\\u05DE\\u05E9\\u05DA\"\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetStepper: action => {\n      dispatch(stepper(action));\n    },\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)(PersonalInfoStep1);\nexport default withConnect;","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/pages/personal-info/PersonalInfoStep1.js"],"names":["React","Component","Fragment","connect","get","Router","cn","STEPPER_STEP1","stepper","validator","requestClient","UserActions","logout","DEFAULT_ERROR","PersonalInfoStep1","first_name","last_name","id_number","phone","first_nameValidate","error","last_nameValidate","id_numberValidate","phoneValidate","e","preventDefault","validate","constants","InputStringRegex","state","setState","IdNumberRegex","IsraelPhoneNumberRegex","valid","props","onSetUserData","showModal","step1","flow_type","birth_date","user","auth","session_token","then","data","onSetStepper","activeStep","edit","push","shallow","catch","onLogout","value","type","componentDidMount","nameInput","focus","render","onSubmit","length","input","handleChangeState","target","textAlign","mapStateToProps","forms","mapDispatchToProps","dispatch","action","setUserData","withConnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport Router from \"next/router\";\nimport cn from \"classnames\";\nimport { STEPPER_STEP1 } from \"./../../actions/forms/forms.actions.constants\";\nimport { stepper } from \"./../../actions/forms/forms.actions\";\nimport validator from \"./../../utils/validate/index\";\nimport requestClient from \"./../../utils/requestClient/requests\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { logout } from \"../../actions/common/common.actions\";\n\nconst DEFAULT_ERROR = \"value isn't valid \";\n\nclass PersonalInfoStep1 extends Component {\n  state = {\n    first_name: null,\n    last_name: null,\n    id_number: null,\n    phone: null,\n\n    first_nameValidate: {\n      error: void 0\n    },\n\n    last_nameValidate: {\n      error: void 0\n    },\n\n    id_numberValidate: {\n      error: void 0\n    },\n\n    phoneValidate: {\n      error: void 0\n    }\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    let first_name = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      this.state.first_name,\n      DEFAULT_ERROR\n    );\n    if (first_name && first_name.error) {\n      this.setState({ first_nameValidate: { error: first_name.error } });\n    } else {\n      this.setState({ first_nameValidate: { error: void 0 } });\n    }\n\n    let last_name = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      this.state.last_name,\n      DEFAULT_ERROR\n    );\n    if (last_name && last_name.error) {\n      this.setState({ last_nameValidate: { error: last_name.error } });\n    } else {\n      this.setState({ last_nameValidate: { error: void 0 } });\n    }\n\n    let id_number = validator.validate.validate(\n      validator.constants.IdNumberRegex,\n      this.state.id_number,\n      DEFAULT_ERROR\n    );\n    if (id_number && id_number.error) {\n      this.setState({ id_numberValidate: { error: id_number.error } });\n    } else {\n      this.setState({ id_numberValidate: { error: void 0 } });\n    }\n\n    let phone = validator.validate.validate(\n      validator.constants.IsraelPhoneNumberRegex,\n      this.state.phone,\n      DEFAULT_ERROR\n    );\n    if (phone && phone.error) {\n      this.setState({ phoneValidate: { error: phone.error } });\n    } else {\n      this.setState({ phoneValidate: { error: void 0 } });\n    }\n\n    if (first_name.valid && last_name.valid && id_number.valid && phone.valid) {\n      this.props.onSetUserData({ showModal: true });\n\n      requestClient\n        .step1(\n          {\n            flow_type: \"EXIST_TENANT\",\n            id_number: this.state.id_number,\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            birth_date:\n              \"19/01/1980\" /* ,\n                    \"landlord_phone\": this.props.user.phone,\n                    \"email\": \"template@template.com\" */\n          },\n          this.props.user.auth.session_token\n        )\n        .then(data => {\n          data.data.showModal = false;\n          this.props.onSetUserData(data.data);\n          this.props.onSetStepper({\n            activeStep: 2,\n            step1: {\n              edit: true\n            }\n          });\n          Router.push(\"/personal-info\", \"/personal-info/2\", { shallow: true });\n        })\n        .catch(error => {\n          if (get(error, \"response.data.errorCode\") === \"INVALID_ID\") {\n            this.setState({\n              id_numberValidate: { error: \"*ת.ז לא תקינה\" }\n            });\n          }\n          this.props.onSetUserData({ showModal: false });\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            this.props.onLogout();\n            Router.push(\"/\");\n          }\n        });\n    }\n  };\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n  handleChangeState = (e, value, type) => {\n    e.preventDefault();\n    this.setState({\n      [type]: value\n    });\n  };\n  render() {\n    const { activeStep } = this.props.stepper;\n    return (\n      <Fragment>\n        <div\n          className={cn({\n            \"personal-info-section\": true,\n            \"personal-info-section-1\": true,\n            \"personal-info-section-active\": activeStep === STEPPER_STEP1\n          })}\n        >\n          <form\n            className=\"personal-info-form\"\n            id=\"personal-info-form\"\n            onSubmit={this.onSubmit}\n          >\n            <div className=\"personal-info-form-container form-container\">\n              <p className=\"input-block-row\">\n                <label\n                  htmlFor=\"input-personal-info-first-name\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\":\n                      this.state.first_name && this.state.first_name.length > 0,\n                    \"input-error\":\n                      this.state.first_nameValidate.error !== void 0\n                  })}\n                >\n                  <input\n                    className=\"input-text input-text-grey\"\n                    type=\"text\"\n                    id=\"input-personal-first-name\"\n                    ref={input => {\n                      this.nameInput = input;\n                    }}\n                    placeholder=\"&nbsp;\"\n                    onChange={e =>\n                      this.handleChangeState(e, e.target.value, \"first_name\")\n                    }\n                    value={this.state.first_name ? this.state.first_name : \"\"}\n                  />\n\n                  <span className=\"input-label-span\">*שם פרטי</span>\n                  <span className=\"input-border\"></span>\n                  {this.state.first_nameValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      *שם לא נכון\n                    </span>\n                  )}\n                </label>\n              </p>\n              <p className=\"input-block-row\">\n                <label\n                  htmlFor=\"input-personal-info-last-name\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\":\n                      this.state.last_name && this.state.last_name.length > 0,\n                    \"input-error\": this.state.last_nameValidate.error !== void 0\n                  })}\n                >\n                  <input\n                    className=\"input-text input-text-grey\"\n                    type=\"text\"\n                    id=\"input-personal-info-last-name\"\n                    ref={input => {\n                      this.nameInput = input;\n                    }}\n                    placeholder=\"&nbsp;\"\n                    onChange={e =>\n                      this.handleChangeState(e, e.target.value, \"last_name\")\n                    }\n                    value={this.state.last_name ? this.state.last_name : \"\"}\n                  />\n                  <span className=\"input-label-span\">*שם משפחה</span>\n                  <span className=\"input-border\"></span>\n                  {this.state.last_nameValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      שם לא נכון\n                    </span>\n                  )}\n                </label>\n              </p>\n              <p className=\"input-block-row\">\n                <label\n                  htmlFor=\"input-personal-info-id-number\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\":\n                      this.state.id_number && this.state.id_number.length > 0,\n                    \"input-error\": this.state.id_numberValidate.error !== void 0\n                  })}\n                >\n                  <input\n                    className=\"input-text input-text-grey\"\n                    type=\"number\"\n                    id=\"input-personal-info-id-number\"\n                    ref={input => {\n                      this.nameInput = input;\n                    }}\n                    placeholder=\"&nbsp;\"\n                    onChange={e =>\n                      this.handleChangeState(e, e.target.value, \"id_number\")\n                    }\n                    value={this.state.id_number ? this.state.id_number : \"\"}\n                  />\n                  <span className=\"input-label-span\">*מספר ת.ז</span>\n                  <span className=\"input-border\"></span>\n                  {this.state.id_numberValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      *ת.ז לא תקינה\n                    </span>\n                  )}\n                </label>\n              </p>\n              <p className=\"input-block-row\">\n                <label\n                  htmlFor=\"input-personal-info-phone-number\"\n                  className={cn({\n                    \"input-label\": true,\n                    \"input-not-empty\":\n                      this.state.phone && this.state.phone.length > 0,\n                    \"input-error\": this.state.phoneValidate.error !== void 0\n                  })}\n                >\n                  <input\n                    className=\"input-text input-text-grey\"\n                    type=\"tel\"\n                    dir=\"auto\"\n                    style={{ textAlign: \"end\" }}\n                    id=\"input-personal-info-phone-number\"\n                    ref={input => {\n                      this.nameInput = input;\n                    }}\n                    placeholder=\"&nbsp;\"\n                    onChange={e =>\n                      this.handleChangeState(e, e.target.value, \"phone\")\n                    }\n                    value={this.state.phone ? this.state.phone : \"\"}\n                  />\n                  <span className=\"input-label-span\">*מספר טלפון</span>\n                  <span className=\"input-border\"></span>\n                  {this.state.phoneValidate.error !== void 0 && (\n                    <span className=\"personal-info-input-error span-error\">\n                      *מספר טלפון\n                    </span>\n                  )}\n                </label>\n              </p>\n            </div>\n            <div className=\"btn-block\">\n              <input\n                className=\"input-submit btn-blue btn-small btn-bold\"\n                id=\"personal-info-submit\"\n                type=\"submit\"\n                value=\"המשך\"\n              />\n            </div>\n          </form>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetStepper: action => {\n      dispatch(stepper(action));\n    },\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PersonalInfoStep1);\n\nexport default withConnect;\n"]},"metadata":{},"sourceType":"module"}