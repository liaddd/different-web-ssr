{"ast":null,"code":"// validate\n// @param string regexp - regular expresson text\n// @param string data - text for validation\n// @param string error - error text\nexport var validate = function validate(regexp, data, error) {\n  var boolValidate = !!data && regexp.test(data);\n  var response = {\n    valid: boolValidate\n  };\n  if (!boolValidate) response.error = error;\n  return response;\n};\nexport default {\n  validate: validate\n};","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/utils/validate/validate.js"],"names":["validate","regexp","data","error","boolValidate","test","response","valid"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAyB;AAE7C,MAAMC,YAAY,GAAG,CAAC,CAACF,IAAF,IAAUD,MAAM,CAACI,IAAP,CAAYH,IAAZ,CAA/B;AACA,MAAII,QAAQ,GAAG;AACXC,IAAAA,KAAK,EAAEH;AADI,GAAf;AAIA,MAAI,CAACA,YAAL,EAAmBE,QAAQ,CAACH,KAAT,GAAiBA,KAAjB;AAEnB,SAAOG,QAAP;AACH,CAVM;AAYP,eAAe;AACXN,EAAAA,QAAQ,EAARA;AADW,CAAf","sourcesContent":["// validate\n// @param string regexp - regular expresson text\n// @param string data - text for validation\n// @param string error - error text\nexport const validate = (regexp, data, error) => {\n\n    const boolValidate = !!data && regexp.test(data);\n    let response = {\n        valid: boolValidate\n    };\n\n    if (!boolValidate) response.error = error;\n\n    return response;\n};\n\nexport default {\n    validate\n}"]},"metadata":{},"sourceType":"module"}