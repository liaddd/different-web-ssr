{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport cn from \"classnames\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport \"./PersonalInfo.scss\";\nimport validator from \"../../utils/validate\";\nimport requestClient from \"../../utils/requestClient/requests\";\nimport { stepper } from \"../../actions/forms/forms.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport ModalPersonalInfo from \"../../components/Modal/ModalPersonalInfo\";\nimport { get } from \"lodash\";\nimport ModalLoader from \"../../components/Modal/ModalLoader\";\nimport { logout } from \"../../actions/common/common.actions\";\nvar DEFAULT_ERROR = \"value isn't valid \";\nvar DEFAULT_ERROR_ID = \"*ת.ז לא תקינה\";\nvar ERROR_RESPONSE = \"אתה לא יכול לבדוק את עצמך\";\nvar MAX_VALIDATE_TENANTS = 5;\n\nvar CurrentTenantBlock =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CurrentTenantBlock, _Component);\n\n  function CurrentTenantBlock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CurrentTenantBlock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CurrentTenantBlock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showModal: false,\n      showModalError: false,\n      checked_user: null,\n      checkBox: false,\n      declarationCheckBox: false,\n      errorMessage: \"\",\n      checked_users: _this.props.user.checked_users\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendData\", function (data) {\n      if (data) {\n        _this.setState(_objectSpread({}, data));\n      } else _this.setState({\n        showModal: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initiateTenant\", function (tenant, id) {\n      var number = id + 1;\n      return __jsx(Fragment, {\n        key: id\n      }, __jsx(\"div\", {\n        className: \"personal-info-form-title\"\n      }, __jsx(\"span\", {\n        className: \"personal-info-form-title-text\"\n      }, \"\\u05D3\\u05D9\\u05D9\\u05E8\"), __jsx(\"span\", {\n        className: \"personal-info-form-title-number\"\n      }, number)), __jsx(\"div\", {\n        className: \"personal-info-form-container form-container\"\n      }, __jsx(\"p\", {\n        className: \"input-block-row\"\n      }, __jsx(\"label\", {\n        htmlFor: \"input-personal-info-first-name\",\n        className: cn(\"input-label\", {\n          \"input-error\": _this.state.checked_users && _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"first_nameValidate\") && _this.state.checked_users[id].first_nameValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].first_nameValidate.error !== void 0,\n          \"input-not-empty\": _this.state.checked_users[id] && _this.state.checked_users[id].first_name && _this.state.checked_users[id].first_name.length > 0\n        })\n      }, __jsx(\"input\", {\n        className: \"input-text input-text-grey\",\n        type: \"text\",\n        id: \"input-personal-first-name\",\n        placeholder: \"\\xA0\",\n        value: _this.state.checked_users[id].first_name ? _this.state.checked_users[id].first_name : \"\",\n        onChange: function onChange(e) {\n          var tenants = _this.state.checked_users;\n          tenants[id].first_name = e.target.value;\n\n          _this.setState({\n            tenants: tenants\n          });\n        }\n      }), __jsx(\"span\", {\n        className: \"input-label-span\"\n      }, \" *\\u05E9\\u05DD \\u05D4\\u05E4\\u05E8\\u05D8\\u05D9\"), __jsx(\"span\", {\n        className: \"input-border\"\n      }), _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"first_nameValidate\") && _this.state.checked_users[id].first_nameValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].first_nameValidate.error !== void 0 && __jsx(\"span\", {\n        className: \"personal-info-input-error span-error\"\n      }, \"error\"))), __jsx(\"p\", {\n        className: \"input-block-row\"\n      }, __jsx(\"label\", {\n        htmlFor: \"input-personal-info-last-name\",\n        className: cn(\"input-label\", {\n          \"input-error\": _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"last_nameValidate\") && _this.state.checked_users[id].last_nameValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].last_nameValidate.error !== void 0,\n          \"input-not-empty\": _this.state.checked_users[id] && _this.state.checked_users[id].last_name && _this.state.checked_users[id].last_name.length > 0\n        })\n      }, __jsx(\"input\", {\n        className: \"input-text input-text-grey\",\n        type: \"text\",\n        id: \"input-personal-info-last-name\",\n        placeholder: \"\\xA0\",\n        value: _this.state.checked_users[id].last_name ? _this.state.checked_users[id].last_name : \"\",\n        onChange: function onChange(e) {\n          var tenants = _this.state.checked_users;\n          tenants[id].last_name = e.target.value;\n\n          _this.setState({\n            tenants: tenants\n          });\n        }\n      }), __jsx(\"span\", {\n        className: \"input-label-span\"\n      }, \"*\\u05E9\\u05DD \\u05DE\\u05E9\\u05E4\\u05D7\\u05EA\\u05D9\"), __jsx(\"span\", {\n        className: \"input-border\"\n      }), _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"last_nameValidate\") && _this.state.checked_users[id].last_nameValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].last_nameValidate.error !== void 0 && __jsx(\"span\", {\n        className: \"personal-info-input-error span-error\"\n      }, \"error\"))), __jsx(\"p\", {\n        className: \"input-block-row\"\n      }, __jsx(\"label\", {\n        htmlFor: \"input-personal-info-id-number\",\n        className: cn(\"input-label\", {\n          \"input-error\": _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"id_numberValidate\") && _this.state.checked_users[id].id_numberValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].id_numberValidate.error !== void 0,\n          \"input-not-empty\": _this.state.checked_users[id] && _this.state.checked_users[id].id_number && _this.state.checked_users[id].id_number.length > 0\n        })\n      }, __jsx(\"input\", {\n        className: \"input-text input-text-grey\",\n        type: \"number\",\n        id: \"input-personal-info-id-number\",\n        placeholder: \"\\xA0\",\n        value: _this.state.checked_users[id].id_number ? _this.state.checked_users[id].id_number : \"\",\n        onChange: function onChange(e) {\n          var tenants = _this.state.checked_users;\n          tenants[id].id_number = e.target.value;\n\n          _this.setState({\n            tenants: tenants\n          });\n        }\n      }), __jsx(\"span\", {\n        className: \"input-label-span\"\n      }, \"*\\u05DE\\u05E1\\u05E4\\u05E8 \\u05EA.\\u05D6\"), __jsx(\"span\", {\n        className: \"input-border\"\n      }), _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"id_numberValidate\") && _this.state.checked_users[id].id_numberValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].id_numberValidate.error !== void 0 && __jsx(\"span\", {\n        className: \"personal-info-input-error span-error\"\n      }, DEFAULT_ERROR_ID))), __jsx(\"p\", {\n        className: \"input-block-row\"\n      }, __jsx(\"label\", {\n        htmlFor: \"input-personal-info-phone-number\",\n        className: cn(\"input-label\", {\n          \"input-error\": _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"phoneValidate\") && _this.state.checked_users[id].phoneValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].phoneValidate.error !== void 0,\n          \"input-not-empty\": _this.state.checked_users[id] && _this.state.checked_users[id].phone && _this.state.checked_users[id].phone.length > 0\n        })\n      }, __jsx(\"input\", {\n        className: \"input-text input-text-grey\",\n        type: \"tel\",\n        dir: \"auto\",\n        style: {\n          textAlign: \"end\"\n        },\n        id: \"input-personal-info-phone-number\",\n        placeholder: \"\\xA0\",\n        value: _this.state.checked_users[id].phone ? _this.state.checked_users[id].phone : \"\",\n        onChange: function onChange(e) {\n          var tenants = _this.state.checked_users;\n          tenants[id].phone = e.target.value;\n\n          _this.setState({\n            tenants: tenants\n          });\n        }\n      }), __jsx(\"span\", {\n        className: \"input-label-span\"\n      }, \"*\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\"), __jsx(\"span\", {\n        className: \"input-border\"\n      }), _this.state.checked_users[id] && _this.state.checked_users[id].hasOwnProperty(\"phoneValidate\") && _this.state.checked_users[id].phoneValidate.hasOwnProperty(\"error\") && _this.state.checked_users[id].phoneValidate.error !== void 0 && __jsx(\"span\", {\n        className: \"personal-info-input-error span-error\"\n      }, \"error\")))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validateTenant\", function (tenant) {\n      var first_name = validator.validate.validate(validator.constants.InputStringRegex, tenant.first_name, DEFAULT_ERROR);\n\n      if (first_name && first_name.error) {\n        tenant.first_nameValidate.error = first_name.error;\n      } else {\n        if (get(tenant, \"first_nameValidate.error\")) {\n          tenant.first_nameValidate.error = void 0;\n        } else {\n          tenant.first_nameValidate = {\n            error: void 0\n          };\n        }\n      }\n\n      var last_name = validator.validate.validate(validator.constants.InputStringRegex, tenant.last_name, DEFAULT_ERROR);\n\n      if (last_name && last_name.error) {\n        tenant.last_nameValidate.error = last_name.error;\n      } else {\n        if (get(tenant, \"last_nameValidate.error\")) {\n          tenant.last_nameValidate.error = void 0;\n        } else {\n          tenant.last_nameValidate = {\n            error: void 0\n          };\n        }\n      }\n\n      var id_number = validator.validate.validate(validator.constants.IdNumberRegex, tenant.id_number, DEFAULT_ERROR_ID);\n\n      if (id_number && id_number.error) {\n        tenant.id_numberValidate.error = id_number.error;\n      } else {\n        if (get(tenant, \"id_numberValidate.error\")) {\n          tenant.id_numberValidate.error = void 0;\n        } else {\n          tenant.id_numberValidate = {\n            error: void 0\n          };\n        }\n      }\n\n      var phone = validator.validate.validate(validator.constants.IsraelPhoneNumberRegex, tenant.phone, DEFAULT_ERROR);\n\n      if (phone && phone.error) {\n        tenant.phoneValidate.error = phone.error;\n      } else {\n        if (get(tenant, \"phoneValidate.error\")) {\n          tenant.phoneValidate.error = void 0;\n        } else {\n          tenant.phoneValidate = {\n            error: void 0\n          };\n        }\n      }\n\n      if (tenant.property_id === null) {\n        tenant.property_id = _this.props.user.id;\n      }\n\n      return tenant;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (e) {\n      var validateForm = [];\n      var validateFormToString = [];\n      e.preventDefault();\n      var tenants = _this.state.checked_users;\n      var validatedTenants = tenants.map(function (tenant) {\n        return _this.validateTenant(tenant);\n      });\n\n      _this.setState({\n        tenants: validatedTenants\n      });\n\n      var users = [];\n\n      for (var i = 0, length = tenants.length - 1; i <= length; i++) {\n        if (tenants[i].first_nameValidate.error !== void 0 || tenants[i].last_nameValidate.error !== void 0 || tenants[i].id_numberValidate.error !== void 0 || tenants[i].phoneValidate.error !== void 0) {\n          validateForm[i] = false;\n        } else {\n          var phone = tenants[i].phone;\n\n          if (tenants[i].phone[0] === \"0\") {\n            phone = phone.replace(/^0/, \"+972\");\n          }\n\n          users.push({\n            property_id: tenants[i].property_id,\n            phone: phone,\n            first_name: tenants[i].first_name,\n            last_name: tenants[i].last_name,\n            id_number: tenants[i].id_number\n          });\n          validateForm[i] = true;\n        }\n\n        validateFormToString[i] = true;\n      }\n\n      if (validateFormToString.toString() === validateForm.toString()) {\n        _this.setState({\n          loading: true\n        }); //this.props.onSetUserData({showModal: true});\n\n\n        requestClient.step3(users, _this.props.user.auth.session_token).then(function (data) {\n          if (get(data, \"data.credit\")) {\n            var resUsers = get(data, \"data.checked_users\", []);\n            var result = resUsers.filter(function (user) {\n              return user.exist_tenant_id;\n            }); // TODO return only with exist_tenant_id\n\n            _this.setState({\n              showModal: true,\n              showModalError: false,\n              loading: false,\n              result: result,\n              errorMessage: \"\"\n            }); // this.props.onSetUserData({credit:data.data.credit, checked_users_step3:result, buttonsCount:result.length})\n\n          } else {\n            _this.setState({\n              showModalError: true,\n              showModal: true,\n              loading: false,\n              errorMessage: \"לא עבר בדיקה\"\n            });\n          }\n        })[\"catch\"](function (error) {\n          var errorMessage = \"\";\n\n          if (get(error, \"response.data.errorCode\") === \"INVALID_ID\") {\n            errorMessage = DEFAULT_ERROR_ID;\n          }\n\n          if (get(error, \"response.data.errorCode\") === \"BAD_DATA\") {\n            errorMessage = ERROR_RESPONSE;\n          }\n\n          if (get(error, \"response.data.errorCode\") === \"CREDIT_SCORE_ERROR\") {\n            errorMessage = \"לא עבר בדיקה\";\n          } // this.props.onSetUserData({showModal: false});\n\n\n          _this.setState({\n            showModal: true,\n            showModalError: true,\n            loading: false,\n            errorMessage: errorMessage\n          });\n\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            _this.props.onLogout();\n\n            Router.push(\"/\");\n          }\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CurrentTenantBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var checked_users = get(this.props, \"user.checked_users\", []);\n      return __jsx(Fragment, null, this.state.showModal && this.state.result && __jsx(ModalPersonalInfo, {\n        show: this.state.showModal,\n        users: this.state.result,\n        sendData: this.sendData,\n        showError: this.state.showModalError\n      }), __jsx(ModalLoader, {\n        show: this.state.loading\n      }), __jsx(\"form\", {\n        className: \"personal-info-form-3 personal-info-form\",\n        id: \"personal-info-form\",\n        onSubmit: this.onSubmit,\n        noValidate: true\n      }, checked_users.map(function (tenant, i) {\n        return _this2.initiateTenant(tenant, i);\n      }), this.state.checked_users && this.state.checked_users.length < MAX_VALIDATE_TENANTS && __jsx(\"div\", {\n        className: \"personal-info-add-block\",\n        onClick: function onClick() {\n          var tenants = _this2.state.checked_users;\n\n          if (tenants.length < MAX_VALIDATE_TENANTS) {\n            tenants.push({\n              first_name: null,\n              last_name: null,\n              id_number: null,\n              phone: null,\n              property_id: _this2.props.user.id,\n              first_nameValidate: {\n                error: void 0\n              },\n              last_nameValidate: {\n                error: void 0\n              },\n              id_numberValidate: {\n                error: void 0\n              },\n              phoneValidate: {\n                error: void 0\n              }\n            });\n\n            _this2.setState({\n              checked_users: tenants\n            });\n\n            _this2.props.onSetUserData({\n              buttonsCount: tenants.length,\n              checked_users: tenants\n            });\n          }\n        }\n      }, __jsx(\"div\", {\n        className: \"personal-info-add\"\n      }, __jsx(\"img\", {\n        className: \"personal-info-add-icon\",\n        src: \"/img/plus-icon-white.svg\",\n        alt: \"\"\n      }), \"\\u05D4\\u05D0\\u05DD \\u05D9\\u05E9 \\u05D3\\u05D9\\u05D9\\u05E8 \\u05E0\\u05D5\\u05E1\\u05E3 \\u05D1\\u05D4\\u05E1\\u05DB\\u05DD \\u05D4\\u05E9\\u05DB\\u05D9\\u05E8\\u05D5\\u05EA \\u05D0\\u05D5\\u05EA\\u05D5 \\u05EA\\u05E8\\u05E6\\u05D4 \\u05E9\\u05E0\\u05D1\\u05D3\\u05D5\\u05E7?\")), __jsx(\"div\", {\n        className: \"personal-info-checkbox-block\"\n      }, this.props.activeRadioButton === 1 && __jsx(\"label\", {\n        className: \"personal-info-label-checkbox\",\n        htmlFor: \"personal-info-checkbox\"\n      }, __jsx(\"input\", {\n        className: \"personal-info-input-checkbox input-checkbox\",\n        id: \"personal-info-checkbox\",\n        checked: this.state.checkBox,\n        onChange: function onChange(e) {\n          _this2.setState({\n            checkBox: !_this2.state.checkBox\n          });\n        },\n        type: \"checkbox\"\n      }), \"\\u05D4\\u05E6\\u05D4\\u05E8\\u05EA\\u05D9 \\u05DC\\u05D2\\u05D1\\u05D9 \\u05D3\\u05D9\\u05D9\\u05E8 \\u05D6\\u05D4: \\u05D4\\u05EA\\u05E9\\u05DC\\u05D5\\u05DD \\u05D1\\u05D2\\u05D9\\u05DF \\u05D7\\u05D5\\u05D3\\u05E9 \\u05D4\\u05E9\\u05DB\\u05D9\\u05E8\\u05D5\\u05EA \\u05D4\\u05E8\\u05D0\\u05E9\\u05D5\\u05DF \\u05E9\\u05D5\\u05DC\\u05DD \\u05D1\\u05D6\\u05DE\\u05DF \\u05D5\\u05DC\\u05D0 \\u05D4\\u05D9\\u05D5 \\u05DE\\u05D0\\u05D6 \\u05E2\\u05D9\\u05DB\\u05D5\\u05D1\\u05D9\\u05DD \\u05D5/\\u05D0\\u05D5 \\u05D7\\u05D5\\u05E1\\u05E8\\u05D9\\u05DD \\u05D1\\u05EA\\u05E9\\u05DC\\u05D5\\u05DD.\")), __jsx(\"div\", {\n        className: \"personal-info-checkbox-block\"\n      }, __jsx(\"label\", {\n        className: \"personal-info-label-checkbox\",\n        htmlFor: \"personal-info-checkbox\"\n      }, __jsx(\"input\", {\n        className: \"personal-info-input-checkbox input-checkbox\",\n        id: \"personal-info-checkbox\",\n        checked: this.state.declarationCheckBox,\n        onChange: function onChange(e) {\n          _this2.setState({\n            declarationCheckBox: !_this2.state.declarationCheckBox\n          });\n        },\n        type: \"checkbox\"\n      }), \"\\u05D4\\u05E0\\u05E0\\u05D9 \\u05DE\\u05E6\\u05D4\\u05D9\\u05E8 \\u05DB\\u05D9 \\u05D0\\u05E0\\u05D9 \\u05DE\\u05D9\\u05D9\\u05D3\\u05E2 \\u05D0\\u05EA \\u05D4\\u05E9\\u05D5\\u05DB\\u05E8 \\u05D1\\u05D4\\u05E2\\u05D1\\u05E8\\u05EA \\u05D4\\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD \\u05DC\\u05E6\\u05D5\\u05E8\\u05DA \\u05D1\\u05D3\\u05D9\\u05E7\\u05D4 \\u05D5\\u05E8\\u05DB\\u05D9\\u05E9\\u05EA \\u05DE\\u05D5\\u05E6\\u05E8 \\u05D4\\u05D1\\u05D8\\u05D7\\u05EA \\u05E9\\u05DB\\u05E8 \\u05D4\\u05D3\\u05D9\\u05E8\\u05D4\")), __jsx(\"p\", {\n        style: {\n          color: \"#e7736d\"\n        }\n      }, this.state.errorMessage), __jsx(\"div\", {\n        className: \"btn-block\"\n      }, __jsx(\"input\", {\n        className: this.state.declarationCheckBox && (this.state.checkBox || this.props.activeRadioButton !== 1) ? \"input-submit btn-small btn-blue btn-bold\" : \"input-submit btn-small btn-grey btn-bold\",\n        id: \"personal-info-submit\",\n        disabled: !this.state.checkBox && this.props.activeRadioButton === 1,\n        type: \"submit\",\n        value: \"\\u05D1\\u05D3\\u05D5\\u05E7\"\n      }))));\n    }\n  }]);\n\n  return CurrentTenantBlock;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetStepper: function onSetStepper(action) {\n      dispatch(stepper(action));\n    },\n    onSetUserData: function onSetUserData(action) {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: function onLogout(action) {\n      dispatch(logout(action));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps)(CurrentTenantBlock);\nexport default withConnect;","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/pages/personal-info/CurrentTenantBlock.js"],"names":["React","Component","Fragment","cn","connect","Router","validator","requestClient","stepper","UserActions","ModalPersonalInfo","get","ModalLoader","logout","DEFAULT_ERROR","DEFAULT_ERROR_ID","ERROR_RESPONSE","MAX_VALIDATE_TENANTS","CurrentTenantBlock","showModal","showModalError","checked_user","checkBox","declarationCheckBox","errorMessage","checked_users","props","user","data","setState","tenant","id","number","state","hasOwnProperty","first_nameValidate","error","first_name","length","e","tenants","target","value","last_nameValidate","last_name","id_numberValidate","id_number","phoneValidate","phone","textAlign","validate","constants","InputStringRegex","IdNumberRegex","IsraelPhoneNumberRegex","property_id","validateForm","validateFormToString","preventDefault","validatedTenants","map","validateTenant","users","i","replace","push","toString","loading","step3","auth","session_token","then","resUsers","result","filter","exist_tenant_id","onLogout","sendData","onSubmit","initiateTenant","onSetUserData","buttonsCount","activeRadioButton","color","mapStateToProps","forms","mapDispatchToProps","dispatch","onSetStepper","action","setUserData","withConnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport cn from \"classnames\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\n\nimport \"./PersonalInfo.scss\";\nimport validator from \"../../utils/validate\";\nimport requestClient from \"../../utils/requestClient/requests\";\nimport { stepper } from \"../../actions/forms/forms.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport ModalPersonalInfo from \"../../components/Modal/ModalPersonalInfo\";\nimport { get } from \"lodash\";\nimport ModalLoader from \"../../components/Modal/ModalLoader\";\nimport { logout } from \"../../actions/common/common.actions\";\nconst DEFAULT_ERROR = \"value isn't valid \";\nconst DEFAULT_ERROR_ID = \"*ת.ז לא תקינה\";\nconst ERROR_RESPONSE = \"אתה לא יכול לבדוק את עצמך\";\nconst MAX_VALIDATE_TENANTS = 5;\n\nclass CurrentTenantBlock extends Component {\n  state = {\n    showModal: false,\n    showModalError: false,\n    checked_user: null,\n    checkBox: false,\n    declarationCheckBox: false,\n    errorMessage: \"\",\n    checked_users: this.props.user.checked_users\n  };\n  // componentWillUpdate(nextProps, nextState) {\n  //         const checkedUserProps= get(this.props,'user.checked_users',[])\n  //         const checkedUserNext =get(nextProps,'user.checked_users',[])\n  //        if(checkedUserProps.length!==checkedUserNext.length){\n  //          this.setState({checked_users:checkedUserNext})\n  //         }\n  // }\n  sendData = data => {\n    if (data) {\n      this.setState({ ...data });\n    } else this.setState({ showModal: false });\n  };\n  initiateTenant = (tenant, id) => {\n    const number = id + 1;\n    return (\n      <Fragment key={id}>\n        <div className=\"personal-info-form-title\">\n          <span className=\"personal-info-form-title-text\">דייר</span>\n          <span className=\"personal-info-form-title-number\">{number}</span>\n        </div>\n        <div className=\"personal-info-form-container form-container\">\n          <p className=\"input-block-row\">\n            <label\n              htmlFor=\"input-personal-info-first-name\"\n              className={cn(\"input-label\", {\n                \"input-error\":\n                  this.state.checked_users &&\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].hasOwnProperty(\n                    \"first_nameValidate\"\n                  ) &&\n                  this.state.checked_users[\n                    id\n                  ].first_nameValidate.hasOwnProperty(\"error\") &&\n                  this.state.checked_users[id].first_nameValidate.error !==\n                    void 0,\n                \"input-not-empty\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].first_name &&\n                  this.state.checked_users[id].first_name.length > 0\n              })}\n            >\n              <input\n                className=\"input-text input-text-grey\"\n                type=\"text\"\n                id=\"input-personal-first-name\"\n                placeholder=\"&nbsp;\"\n                value={\n                  this.state.checked_users[id].first_name\n                    ? this.state.checked_users[id].first_name\n                    : \"\"\n                }\n                onChange={e => {\n                  let tenants = this.state.checked_users;\n                  tenants[id].first_name = e.target.value;\n\n                  this.setState({ tenants });\n                }}\n              />\n              <span className=\"input-label-span\"> *שם הפרטי</span>\n              <span className=\"input-border\"></span>\n              {this.state.checked_users[id] &&\n                this.state.checked_users[id].hasOwnProperty(\n                  \"first_nameValidate\"\n                ) &&\n                this.state.checked_users[id].first_nameValidate.hasOwnProperty(\n                  \"error\"\n                ) &&\n                this.state.checked_users[id].first_nameValidate.error !==\n                  void 0 && (\n                  <span className=\"personal-info-input-error span-error\">\n                    error\n                  </span>\n                )}\n            </label>\n          </p>\n          <p className=\"input-block-row\">\n            <label\n              htmlFor=\"input-personal-info-last-name\"\n              className={cn(\"input-label\", {\n                \"input-error\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].hasOwnProperty(\n                    \"last_nameValidate\"\n                  ) &&\n                  this.state.checked_users[id].last_nameValidate.hasOwnProperty(\n                    \"error\"\n                  ) &&\n                  this.state.checked_users[id].last_nameValidate.error !==\n                    void 0,\n                \"input-not-empty\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].last_name &&\n                  this.state.checked_users[id].last_name.length > 0\n              })}\n            >\n              <input\n                className=\"input-text input-text-grey\"\n                type=\"text\"\n                id=\"input-personal-info-last-name\"\n                placeholder=\"&nbsp;\"\n                value={\n                  this.state.checked_users[id].last_name\n                    ? this.state.checked_users[id].last_name\n                    : \"\"\n                }\n                onChange={e => {\n                  let tenants = this.state.checked_users;\n                  tenants[id].last_name = e.target.value;\n\n                  this.setState({ tenants });\n                }}\n              />\n              <span className=\"input-label-span\">*שם משפחתי</span>\n              <span className=\"input-border\"></span>\n              {this.state.checked_users[id] &&\n                this.state.checked_users[id].hasOwnProperty(\n                  \"last_nameValidate\"\n                ) &&\n                this.state.checked_users[id].last_nameValidate.hasOwnProperty(\n                  \"error\"\n                ) &&\n                this.state.checked_users[id].last_nameValidate.error !==\n                  void 0 && (\n                  <span className=\"personal-info-input-error span-error\">\n                    error\n                  </span>\n                )}\n            </label>\n          </p>\n          <p className=\"input-block-row\">\n            <label\n              htmlFor=\"input-personal-info-id-number\"\n              className={cn(\"input-label\", {\n                \"input-error\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].hasOwnProperty(\n                    \"id_numberValidate\"\n                  ) &&\n                  this.state.checked_users[id].id_numberValidate.hasOwnProperty(\n                    \"error\"\n                  ) &&\n                  this.state.checked_users[id].id_numberValidate.error !==\n                    void 0,\n                \"input-not-empty\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].id_number &&\n                  this.state.checked_users[id].id_number.length > 0\n              })}\n            >\n              <input\n                className=\"input-text input-text-grey\"\n                type=\"number\"\n                id=\"input-personal-info-id-number\"\n                placeholder=\"&nbsp;\"\n                value={\n                  this.state.checked_users[id].id_number\n                    ? this.state.checked_users[id].id_number\n                    : \"\"\n                }\n                onChange={e => {\n                  let tenants = this.state.checked_users;\n                  tenants[id].id_number = e.target.value;\n\n                  this.setState({ tenants });\n                }}\n              />\n              <span className=\"input-label-span\">*מספר ת.ז</span>\n              <span className=\"input-border\"></span>\n              {this.state.checked_users[id] &&\n                this.state.checked_users[id].hasOwnProperty(\n                  \"id_numberValidate\"\n                ) &&\n                this.state.checked_users[id].id_numberValidate.hasOwnProperty(\n                  \"error\"\n                ) &&\n                this.state.checked_users[id].id_numberValidate.error !==\n                  void 0 && (\n                  <span className=\"personal-info-input-error span-error\">\n                    {DEFAULT_ERROR_ID}\n                  </span>\n                )}\n            </label>\n          </p>\n          <p className=\"input-block-row\">\n            <label\n              htmlFor=\"input-personal-info-phone-number\"\n              className={cn(\"input-label\", {\n                \"input-error\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].hasOwnProperty(\n                    \"phoneValidate\"\n                  ) &&\n                  this.state.checked_users[id].phoneValidate.hasOwnProperty(\n                    \"error\"\n                  ) &&\n                  this.state.checked_users[id].phoneValidate.error !== void 0,\n                \"input-not-empty\":\n                  this.state.checked_users[id] &&\n                  this.state.checked_users[id].phone &&\n                  this.state.checked_users[id].phone.length > 0\n              })}\n            >\n              <input\n                className=\"input-text input-text-grey\"\n                type=\"tel\"\n                dir=\"auto\"\n                style={{ textAlign: \"end\" }}\n                id=\"input-personal-info-phone-number\"\n                placeholder=\"&nbsp;\"\n                value={\n                  this.state.checked_users[id].phone\n                    ? this.state.checked_users[id].phone\n                    : \"\"\n                }\n                onChange={e => {\n                  let tenants = this.state.checked_users;\n                  tenants[id].phone = e.target.value;\n\n                  this.setState({ tenants });\n                }}\n              />\n              <span className=\"input-label-span\">*מספר טלפון</span>\n              <span className=\"input-border\"></span>\n              {this.state.checked_users[id] &&\n                this.state.checked_users[id].hasOwnProperty(\"phoneValidate\") &&\n                this.state.checked_users[id].phoneValidate.hasOwnProperty(\n                  \"error\"\n                ) &&\n                this.state.checked_users[id].phoneValidate.error !== void 0 && (\n                  <span className=\"personal-info-input-error span-error\">\n                    error\n                  </span>\n                )}\n            </label>\n          </p>\n        </div>\n      </Fragment>\n    );\n  };\n\n  validateTenant = tenant => {\n    let first_name = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      tenant.first_name,\n      DEFAULT_ERROR\n    );\n\n    if (first_name && first_name.error) {\n      tenant.first_nameValidate.error = first_name.error;\n    } else {\n      if (get(tenant, \"first_nameValidate.error\")) {\n        tenant.first_nameValidate.error = void 0;\n      } else {\n        tenant.first_nameValidate = { error: void 0 };\n      }\n    }\n\n    let last_name = validator.validate.validate(\n      validator.constants.InputStringRegex,\n      tenant.last_name,\n      DEFAULT_ERROR\n    );\n    if (last_name && last_name.error) {\n      tenant.last_nameValidate.error = last_name.error;\n    } else {\n      if (get(tenant, \"last_nameValidate.error\")) {\n        tenant.last_nameValidate.error = void 0;\n      } else {\n        tenant.last_nameValidate = { error: void 0 };\n      }\n    }\n\n    let id_number = validator.validate.validate(\n      validator.constants.IdNumberRegex,\n      tenant.id_number,\n      DEFAULT_ERROR_ID\n    );\n    if (id_number && id_number.error) {\n      tenant.id_numberValidate.error = id_number.error;\n    } else {\n      if (get(tenant, \"id_numberValidate.error\")) {\n        tenant.id_numberValidate.error = void 0;\n      } else {\n        tenant.id_numberValidate = { error: void 0 };\n      }\n    }\n\n    let phone = validator.validate.validate(\n      validator.constants.IsraelPhoneNumberRegex,\n      tenant.phone,\n      DEFAULT_ERROR\n    );\n    if (phone && phone.error) {\n      tenant.phoneValidate.error = phone.error;\n    } else {\n      if (get(tenant, \"phoneValidate.error\")) {\n        tenant.phoneValidate.error = void 0;\n      } else {\n        tenant.phoneValidate = { error: void 0 };\n      }\n    }\n\n    if (tenant.property_id === null) {\n      tenant.property_id = this.props.user.id;\n    }\n\n    return tenant;\n  };\n\n  onSubmit = e => {\n    let validateForm = [];\n    let validateFormToString = [];\n    e.preventDefault();\n    let tenants = this.state.checked_users;\n    const validatedTenants = tenants.map(tenant => {\n      return this.validateTenant(tenant);\n    });\n\n    this.setState({ tenants: validatedTenants });\n    let users = [];\n    for (let i = 0, length = tenants.length - 1; i <= length; i++) {\n      if (\n        tenants[i].first_nameValidate.error !== void 0 ||\n        tenants[i].last_nameValidate.error !== void 0 ||\n        tenants[i].id_numberValidate.error !== void 0 ||\n        tenants[i].phoneValidate.error !== void 0\n      ) {\n        validateForm[i] = false;\n      } else {\n        let phone = tenants[i].phone;\n        if (tenants[i].phone[0] === \"0\") {\n          phone = phone.replace(/^0/, \"+972\");\n        }\n        users.push({\n          property_id: tenants[i].property_id,\n          phone: phone,\n          first_name: tenants[i].first_name,\n          last_name: tenants[i].last_name,\n          id_number: tenants[i].id_number\n        });\n        validateForm[i] = true;\n      }\n      validateFormToString[i] = true;\n    }\n\n    if (validateFormToString.toString() === validateForm.toString()) {\n      this.setState({ loading: true });\n      //this.props.onSetUserData({showModal: true});\n      requestClient\n        .step3(users, this.props.user.auth.session_token)\n        .then(data => {\n          if (get(data, \"data.credit\")) {\n            const resUsers = get(data, \"data.checked_users\", []);\n            const result = resUsers.filter(user => user.exist_tenant_id); // TODO return only with exist_tenant_id\n            this.setState({\n              showModal: true,\n              showModalError: false,\n              loading: false,\n              result,\n              errorMessage: \"\"\n            });\n            // this.props.onSetUserData({credit:data.data.credit, checked_users_step3:result, buttonsCount:result.length})\n          } else {\n            this.setState({\n              showModalError: true,\n              showModal: true,\n              loading: false,\n              errorMessage: \"לא עבר בדיקה\"\n            });\n          }\n        })\n        .catch(error => {\n          let errorMessage = \"\";\n          if (get(error, \"response.data.errorCode\") === \"INVALID_ID\") {\n            errorMessage = DEFAULT_ERROR_ID;\n          }\n          if (get(error, \"response.data.errorCode\") === \"BAD_DATA\") {\n            errorMessage = ERROR_RESPONSE;\n          }\n          if (get(error, \"response.data.errorCode\") === \"CREDIT_SCORE_ERROR\") {\n            errorMessage = \"לא עבר בדיקה\";\n          }\n          // this.props.onSetUserData({showModal: false});\n          this.setState({\n            showModal: true,\n            showModalError: true,\n            loading: false,\n            errorMessage\n          });\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            this.props.onLogout();\n            Router.push(\"/\");\n          }\n        });\n    }\n  };\n\n  render() {\n    const checked_users = get(this.props, \"user.checked_users\", []);\n    return (\n      <Fragment>\n        {this.state.showModal && this.state.result && (\n          <ModalPersonalInfo\n            show={this.state.showModal}\n            users={this.state.result}\n            sendData={this.sendData}\n            showError={this.state.showModalError}\n          />\n        )}\n        <ModalLoader show={this.state.loading} />\n        <form\n          className=\"personal-info-form-3 personal-info-form\"\n          id=\"personal-info-form\"\n          onSubmit={this.onSubmit}\n          noValidate\n        >\n          {checked_users.map((tenant, i) => this.initiateTenant(tenant, i))}\n\n          {this.state.checked_users &&\n            this.state.checked_users.length < MAX_VALIDATE_TENANTS && (\n              <div\n                className=\"personal-info-add-block\"\n                onClick={() => {\n                  let tenants = this.state.checked_users;\n\n                  if (tenants.length < MAX_VALIDATE_TENANTS) {\n                    tenants.push({\n                      first_name: null,\n                      last_name: null,\n                      id_number: null,\n                      phone: null,\n                      property_id: this.props.user.id,\n                      first_nameValidate: {\n                        error: void 0\n                      },\n\n                      last_nameValidate: {\n                        error: void 0\n                      },\n\n                      id_numberValidate: {\n                        error: void 0\n                      },\n\n                      phoneValidate: {\n                        error: void 0\n                      }\n                    });\n                    this.setState({ checked_users: tenants });\n                    this.props.onSetUserData({\n                      buttonsCount: tenants.length,\n                      checked_users: tenants\n                    });\n                  }\n                }}\n              >\n                <div className=\"personal-info-add\">\n                  <img\n                    className=\"personal-info-add-icon\"\n                    src=\"/img/plus-icon-white.svg\"\n                    alt=\"\"\n                  />\n                  האם יש דייר נוסף בהסכם השכירות אותו תרצה שנבדוק?\n                </div>\n              </div>\n            )}\n          <div className=\"personal-info-checkbox-block\">\n            {this.props.activeRadioButton === 1 && (\n              <label\n                className=\"personal-info-label-checkbox\"\n                htmlFor=\"personal-info-checkbox\"\n              >\n                <input\n                  className=\"personal-info-input-checkbox input-checkbox\"\n                  id=\"personal-info-checkbox\"\n                  checked={this.state.checkBox}\n                  onChange={e => {\n                    this.setState({ checkBox: !this.state.checkBox });\n                  }}\n                  type=\"checkbox\"\n                />\n                הצהרתי לגבי דייר זה: התשלום בגין חודש השכירות הראשון שולם בזמן\n                ולא היו מאז עיכובים ו/או חוסרים בתשלום.\n              </label>\n            )}\n          </div>\n          <div className=\"personal-info-checkbox-block\">\n            <label\n              className=\"personal-info-label-checkbox\"\n              htmlFor=\"personal-info-checkbox\"\n            >\n              <input\n                className=\"personal-info-input-checkbox input-checkbox\"\n                id=\"personal-info-checkbox\"\n                checked={this.state.declarationCheckBox}\n                onChange={e => {\n                  this.setState({\n                    declarationCheckBox: !this.state.declarationCheckBox\n                  });\n                }}\n                type=\"checkbox\"\n              />\n              הנני מצהיר כי אני מיידע את השוכר בהעברת הנתונים לצורך בדיקה ורכישת\n              מוצר הבטחת שכר הדירה\n            </label>\n          </div>\n          <p style={{ color: \"#e7736d\" }}>{this.state.errorMessage}</p>\n          <div className=\"btn-block\">\n            <input\n              className={\n                this.state.declarationCheckBox &&\n                (this.state.checkBox || this.props.activeRadioButton !== 1)\n                  ? \"input-submit btn-small btn-blue btn-bold\"\n                  : \"input-submit btn-small btn-grey btn-bold\"\n              }\n              id=\"personal-info-submit\"\n              disabled={\n                !this.state.checkBox && this.props.activeRadioButton === 1\n              }\n              type=\"submit\"\n              value=\"בדוק\"\n            />\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetStepper: action => {\n      dispatch(stepper(action));\n    },\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrentTenantBlock);\n\nexport default withConnect;\n"]},"metadata":{},"sourceType":"module"}