{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\nimport ChevronDown from \"./../../public/icons/chevron-down-icon.svg\";\nimport HeaderActions from \"../../actions/header/header.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { logout } from \"../../actions/common/common.actions\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n  /**\n   * Set the wrapper ref\n   */\n\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\n   * handleClickOutside detect if clicked on outside of element\n   */\n\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.onSetToggleMenu(false);\n    }\n  }\n\n  render() {\n    const {\n      firsName,\n      lastName\n    } = this.props;\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"drop-menu-block\",\n      ref: this.setWrapperRef\n    }, __jsx(\"button\", {\n      className: \"btn btn-white btn-medium\",\n      onClick: () => {\n        this.props.onSetToggleMenu(!this.props.toggleMenu);\n      }\n    }, firsName, \" \", lastName, __jsx(\"img\", {\n      src: ChevronDown,\n      className: \"icon-chevron-down\",\n      alt: \"\"\n    })), this.props.toggleMenu ? __jsx(\"nav\", {\n      className: \"drop-menu\"\n    }, __jsx(Link, {\n      href: \"/signin\"\n    }, __jsx(\"a\", {\n      onClick: () => {\n        this.props.onLogout();\n        localStorage.clear();\n      },\n      className: \"drop-menu-link\"\n    }, __jsx(\"span\", {\n      className: \"icon icon-avatar\"\n    }), \"\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9 \\u05D7\\u05D3\\u05E9\")), __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", {\n      onClick: () => {\n        this.props.onLogout();\n        localStorage.clear();\n      },\n      className: \"drop-menu-link\"\n    }, __jsx(\"span\", {\n      className: \"icon icon-cog\"\n    }), \"\\u05D4\\u05EA\\u05E0\\u05EA\\u05E7\"))) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    toggleMenu: state.header.toggleMenu,\n    userAuth: state.user.auth,\n    firsName: state.user.first_name,\n    lastName: state.user.last_name\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetToggleMenu: action => {\n      dispatch(HeaderActions.accountMenuToggle(action));\n    },\n    setUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Account);","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/components/Account/Account.component.js"],"names":["React","Component","Fragment","connect","Link","ChevronDown","HeaderActions","UserActions","logout","Account","constructor","props","setWrapperRef","bind","handleClickOutside","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","node","wrapperRef","event","contains","target","onSetToggleMenu","render","firsName","lastName","toggleMenu","onLogout","localStorage","clear","mapStateToProps","state","header","userAuth","user","auth","first_name","last_name","mapDispatchToProps","dispatch","action","accountMenuToggle","setUserData"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Link from \"next/link\";\n\nimport ChevronDown from \"./../../public/icons/chevron-down-icon.svg\";\nimport HeaderActions from \"../../actions/header/header.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { logout } from \"../../actions/common/common.actions\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  /**\n   * handleClickOutside detect if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.onSetToggleMenu(false);\n    }\n  }\n\n  render() {\n    const { firsName, lastName } = this.props;\n    return (\n      <Fragment>\n        <div className=\"drop-menu-block\" ref={this.setWrapperRef}>\n          <button\n            className=\"btn btn-white btn-medium\"\n            onClick={() => {\n              this.props.onSetToggleMenu(!this.props.toggleMenu);\n            }}\n          >\n            {firsName} {lastName}\n            <img src={ChevronDown} className=\"icon-chevron-down\" alt=\"\" />\n          </button>\n          {this.props.toggleMenu ? (\n            <nav className=\"drop-menu\">\n              <Link href=\"/signin\">\n                <a\n                  onClick={() => {\n                    this.props.onLogout();\n                    localStorage.clear();\n                  }}\n                  className=\"drop-menu-link\"\n                >\n                  <span className=\"icon icon-avatar\"></span>\n                  משתמש חדש\n                </a>\n              </Link>\n\n              <Link href=\"/\">\n                <a\n                  onClick={() => {\n                    this.props.onLogout();\n                    localStorage.clear();\n                  }}\n                  className=\"drop-menu-link\"\n                >\n                  <span className=\"icon icon-cog\"></span>\n                  התנתק\n                </a>\n              </Link>\n            </nav>\n          ) : null}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    toggleMenu: state.header.toggleMenu,\n    userAuth: state.user.auth,\n    firsName: state.user.first_name,\n    lastName: state.user.last_name\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetToggleMenu: action => {\n      dispatch(HeaderActions.accountMenuToggle(action));\n    },\n    setUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Account);\n"]},"metadata":{},"sourceType":"module"}