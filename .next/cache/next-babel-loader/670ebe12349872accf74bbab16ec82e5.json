{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport cn from \"classnames\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport { stepper } from \"../../actions/forms/forms.actions\";\nimport UserActions from \"../../actions/users/users.actions\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { STEPPER_STEP2 } from \"../../actions/forms/forms.actions.constants\";\nimport validator from \"../../utils/validate\";\nimport requestClient from \"../../utils/requestClient/requests\";\nimport { get } from \"lodash\";\nimport { logout } from \"../../actions/common/common.actions\";\nconst DEFAULT_ERROR = \"value isn't valid \";\n\nclass PersonalInfoStep2 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      city: \"\",\n      street: \"\",\n      street_no: \"\",\n      apt_no: \"\",\n      cityValidate: {\n        error: void 0\n      },\n      streetValidate: {\n        error: void 0\n      },\n      street_noValidate: {\n        error: void 0\n      },\n      apt_noValidate: {\n        error: void 0\n      }\n    });\n\n    _defineProperty(this, \"handleChangeState\", (e, value, type) => {\n      e.preventDefault();\n      this.setState({\n        [type]: value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", e => {\n      e.preventDefault();\n      let city = validator.validate.validate(validator.constants.InputStringRegex, this.state.city, DEFAULT_ERROR);\n\n      if (city && city.error) {\n        this.setState({\n          cityValidate: {\n            error: city.error\n          }\n        });\n      } else {\n        this.setState({\n          cityValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let street = validator.validate.validate(validator.constants.InputStringRegex, this.state.street, DEFAULT_ERROR);\n\n      if (street && street.error) {\n        this.setState({\n          streetValidate: {\n            error: street.error\n          }\n        });\n      } else {\n        this.setState({\n          streetValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let street_no = validator.validate.validate(validator.constants.InputNumberRegex, this.state.street_no, DEFAULT_ERROR);\n\n      if (street_no && street_no.error) {\n        this.setState({\n          street_noValidate: {\n            error: street_no.error\n          }\n        });\n      } else {\n        this.setState({\n          street_noValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      let apt_no = validator.validate.validate(validator.constants.InputNumberRegex, this.state.apt_no, DEFAULT_ERROR);\n\n      if (apt_no && apt_no.error) {\n        this.setState({\n          apt_noValidate: {\n            error: apt_no.error\n          }\n        });\n      } else {\n        this.setState({\n          apt_noValidate: {\n            error: void 0\n          }\n        });\n      }\n\n      if (city.valid && street.valid && street_no.valid && apt_no.valid) {\n        this.props.onSetUserData({\n          showModal: true\n        });\n        requestClient.step2({\n          flow_type: \"EXIST_TENANT\",\n          city: this.state.city,\n          street: this.state.street,\n          street_no: this.state.street_no,\n          apartment_number: this.state.apt_no\n        }, this.props.user.auth.session_token).then(data => {\n          data.data.showModal = false;\n          data.data.errorMessageStep2 = \"\";\n          this.props.onSetUserData(data.data);\n          this.props.onSetStepper({\n            activeStep: 3,\n            step2: {\n              edit: true\n            }\n          });\n          Router.push(\"/personal-info\", \"/personal-info/3\", {\n            shallow: true\n          });\n        }).catch(error => {\n          console.error(error);\n          this.props.onSetUserData({\n            showModal: false,\n            errorMessageStep2: \"כתובת לא תקינה\"\n          });\n\n          if (get(error, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n            this.props.onLogout();\n            Router.push(\"/\");\n          }\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.nameInput.focus();\n    this.props.height && scroll.scrollTo(this.props.height / 4);\n  }\n\n  render() {\n    const {\n      activeStep\n    } = this.props.stepper;\n    const errorMessageStep2 = get(this.props, \"user.errorMessageStep2\", \"\");\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: cn({\n        \"personal-info-section\": true,\n        \"personal-info-section-2\": true,\n        \"personal-info-section-active\": activeStep === STEPPER_STEP2\n      })\n    }, __jsx(\"form\", {\n      className: \"personal-info-form\",\n      id: \"personal-info-form\",\n      onSubmit: this.onSubmit\n    }, __jsx(\"div\", {\n      className: \"personal-info-form-container form-container\"\n    }, __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-city\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.city && this.state.city.length > 0,\n        \"input-error\": this.state.cityValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"text\",\n      id: \"input-personal-city\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"city\"),\n      value: this.state.city ? this.state.city : \"\"\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05E2\\u05D9\\u05E8\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.cityValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"required\"))), __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-street\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.street && this.state.street.length > 0,\n        \"input-error\": this.state.streetValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"text\",\n      id: \"input-personal-info-street\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"street\")\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05E8\\u05D7\\u05D5\\u05D1\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.streetValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"required\"))), __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-house-number\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.street_no && this.state.street_no.length > 0,\n        \"input-error\": this.state.street_noValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"text\",\n      id: \"input-personal-info-house-number\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"street_no\")\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"*\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D1\\u05D9\\u05EA\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.street_noValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"required\"))), __jsx(\"p\", {\n      className: \"input-block-row\"\n    }, __jsx(\"label\", {\n      htmlFor: \"input-personal-info-apartment-number\",\n      className: cn({\n        \"input-label\": true,\n        \"input-not-empty\": this.state.apt_no && this.state.apt_no.length > 0,\n        \"input-error\": this.state.apt_noValidate.error !== void 0\n      })\n    }, __jsx(\"input\", {\n      className: \"input-text input-text-grey\",\n      type: \"text\",\n      id: \"input-personal-info-apartment-number\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      placeholder: \"\\xA0\",\n      onChange: e => this.handleChangeState(e, e.target.value, \"apt_no\")\n    }), __jsx(\"span\", {\n      className: \"input-label-span\"\n    }, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D3\\u05D9\\u05E8\\u05D4\"), __jsx(\"span\", {\n      className: \"input-border\"\n    }), this.state.apt_noValidate.error !== void 0 && __jsx(\"span\", {\n      className: \"personal-info-input-error span-error\"\n    }, \"required\")))), __jsx(\"p\", {\n      style: {\n        color: \"#e7736d\",\n        paddingRight: \"20px\"\n      }\n    }, errorMessageStep2), __jsx(\"div\", {\n      className: \"btn-block\"\n    }, __jsx(\"input\", {\n      className: \"input-submit btn-blue btn-small btn-bold\",\n      id: \"personal-info-submit\",\n      type: \"submit\",\n      value: \"\\u05D4\\u05DE\\u05E9\\u05DA\"\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    stepper: state.forms.stepper\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetStepper: action => {\n      dispatch(stepper(action));\n    },\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)(PersonalInfoStep2);\nexport default withConnect;","map":null,"metadata":{},"sourceType":"module"}