{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./../Authorization.scss\";\nimport UserActions from \"../../../actions/users/users.actions\";\nimport Validator from \"./../../../utils/validate\";\nimport Api from \"./../../../utils/requestClient/requests\";\nimport { get } from \"lodash\";\n\nclass AuthorizationStep1 extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      asyncError: {\n        errorText: \"undefined request error\",\n        errorState: false\n      },\n      phone: {\n        // please it will translate to hebrew if it need\n        errorText: Validator.constants.PhoneErrorText,\n        errorState: false\n      },\n      checker: {\n        // please it will translate to hebrew if it need\n        errorText: Validator.constants.CheckboxErrorText,\n        errorState: false\n      }\n    });\n\n    _defineProperty(this, \"onSubmitForm\", e => {\n      e.preventDefault();\n      this.validatePhone();\n      this.validateChecker();\n\n      if (this.validatePhone() && this.validateChecker()) {\n        let phoneFormat = this.authorizationInput.value;\n        phoneFormat = phoneFormat[0] === \"0\" ? phoneFormat.replace(/^0/, \"+972\") : phoneFormat;\n        const requestData = {\n          phone: phoneFormat,\n          device_type: \"web\",\n          device_name: \"web\",\n          os_version: \"1\",\n          is_agent: false\n        };\n        this.props.onSetUserData({\n          showModal: true\n        });\n        Api.login(requestData).then(data => {\n          if (this.state.asyncError.errorState) {\n            this.setState(prevState => {\n              return _objectSpread({}, prevState, _objectSpread({}, prevState.asyncError, {\n                asyncError: {\n                  errorText: \"\",\n                  errorState: false\n                }\n              }));\n            });\n          }\n\n          data.data.phone = phoneFormat;\n          data.data.showModal = false;\n          this.props.onSetUserData(data.data);\n        }).catch(err => {\n          this.props.onSetUserData({\n            showModal: false\n          });\n\n          if (get(err, \"response.data.errorCode\") === \"BLOCKED_USER\") {\n            this.props.hendleBlockUser();\n          }\n\n          this.setState(prevState => {\n            return _objectSpread({}, prevState, _objectSpread({}, prevState.asyncError, {\n              asyncError: {\n                errorText: \"מספר הטלפון שהוזן אינו תקין\",\n                errorState: true\n              }\n            }));\n          });\n        });\n      }\n    });\n\n    this.authorizationInput = React.createRef();\n    this.authorizationChecker = React.createRef();\n  }\n\n  // validatePhone is short validate callback function\n  validatePhone() {\n    const {\n      authorizationInput\n    } = this;\n    const inputValidation = Validator.validate.validate(Validator.constants.IsraelPhoneNumberRegex, authorizationInput.value, Validator.constants.PhoneErrorValidation);\n\n    if (inputValidation.error) {\n      this.setState((prevState, props) => {\n        return _objectSpread({}, prevState, _objectSpread({}, prevState.phone, {\n          phone: {\n            errorText: inputValidation.error,\n            errorState: true\n          }\n        }));\n      });\n    } else {\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, _objectSpread({}, prevState.phone, {\n          phone: {\n            errorText: inputValidation.error,\n            errorState: false\n          }\n        }));\n      });\n    }\n\n    return inputValidation.valid;\n  } // validateChecker is short validate callback function\n\n\n  validateChecker() {\n    const {\n      authorizationChecker\n    } = this;\n    const inputValidation = Validator.validate.validate(Validator.constants.InputCheckerRegex, authorizationChecker.checked, Validator.constants.CheckboxErrorText);\n\n    if (inputValidation.error) {\n      this.setState((prevState, props) => {\n        return _objectSpread({}, prevState, _objectSpread({}, prevState.checker, {\n          checker: {\n            errorText: inputValidation.error,\n            errorState: true\n          }\n        }));\n      });\n    } else {\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, _objectSpread({}, prevState.checker, {\n          checker: {\n            errorText: inputValidation.error,\n            errorState: false\n          }\n        }));\n      });\n    }\n\n    return inputValidation.valid;\n  } // onSubmitForm is action to submit form\n\n\n  // render\n  render() {\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"authorization-block\"\n    }, __jsx(\"div\", {\n      className: \"authorization-block-form\"\n    }, __jsx(\"div\", {\n      className: \"authorization-block-title\"\n    }, __jsx(\"div\", {\n      className: \"authorization-title\"\n    }, \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05D8\\u05DC\\u05E4\\u05D5\\u05DF \\u05DC\\u05D4\\u05EA\\u05D7\\u05D1\\u05E8\\u05D5\\u05EA\")), __jsx(\"form\", {\n      className: \"authorization-form\",\n      id: \"authorization-form\",\n      onSubmit: e => this.onSubmitForm(e),\n      noValidate: true\n    }, __jsx(\"div\", {\n      className: \"authorization-block-input\"\n    }, __jsx(\"input\", {\n      className: \"authorization-input-tel input-tel authorization-input\",\n      type: \"tel\",\n      autoFocus: true,\n      ref: node => this.authorizationInput = node,\n      dir: \"ltr\"\n    }), this.state.phone.errorState ? __jsx(\"span\", {\n      className: \"authorization-input-error\"\n    }, this.state.phone.errorText) : null, this.state.asyncError.errorState ? __jsx(\"span\", {\n      className: \"authorization-input-error\"\n    }, this.state.asyncError.errorText) : null, this.state.checker.errorState ? __jsx(\"span\", {\n      className: \"authorization-input-error\"\n    }, this.state.checker.errorText) : null), __jsx(\"div\", {\n      className: \"authorization-block-description\"\n    }, \"\\u05D0\\u05E0\\u05D5 \\u05E0\\u05E9\\u05DC\\u05D7 \\u05D0\\u05DC\\u05D9\\u05D9\\u05DA \\u05E7\\u05D5\\u05D3 \\u05DC\\u05D0\\u05D9\\u05E9\\u05D5\\u05E8 \\u05DE\\u05E1\\u05E4\\u05E8 \\u05D4\\u05D8\\u05DC\\u05E4\\u05D5\\u05DF\"), __jsx(\"div\", {\n      className: \"authorization-block-checkbox\"\n    }, __jsx(\"input\", {\n      className: \"authorization-input-checkbox input-checkbox\",\n      id: \"authorization-checkbox\",\n      type: \"checkbox\",\n      ref: node => this.authorizationChecker = node\n    }), __jsx(\"label\", {\n      className: \"authorization-label-checkbox\",\n      htmlFor: \"authorization-checkbox\"\n    }, \"\\u05D0\\u05D9\\u05E9\\u05E8\\u05EA\\u05D9 \\u05D0\\u05EA\\xA0\", __jsx(\"a\", {\n      href: \"https://diffe-rent.s3-eu-west-1.amazonaws.com/%D7%AA%D7%A7%D7%A0%D7%95%D7%9F-+DiffeRent.pdf\",\n      target: \"_blank\"\n    }, \"\\u05D4\\u05EA\\u05E7\\u05E0\\u05D5\\u05DF\"))), __jsx(\"div\", {\n      className: \"authorization-block-submit\"\n    }, __jsx(\"input\", {\n      className: \"authorization-submit input-submit btn-blue btn-large\",\n      id: \"authorization-submit\",\n      type: \"submit\",\n      value: \"\\u05E9\\u05DC\\u05D9\\u05D7\\u05D4\"\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userPhone: state.user.phone\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    }\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps)(AuthorizationStep1);\nexport default withConnect;","map":{"version":3,"sources":["/Users/liadhorovitz/Desktop/SSR-different-web/pages/signin/Authorization/AuthorizationStep1.js"],"names":["React","Component","Fragment","connect","UserActions","Validator","Api","get","AuthorizationStep1","constructor","props","asyncError","errorText","errorState","phone","constants","PhoneErrorText","checker","CheckboxErrorText","e","preventDefault","validatePhone","validateChecker","phoneFormat","authorizationInput","value","replace","requestData","device_type","device_name","os_version","is_agent","onSetUserData","showModal","login","then","data","state","setState","prevState","catch","err","hendleBlockUser","createRef","authorizationChecker","inputValidation","validate","IsraelPhoneNumberRegex","PhoneErrorValidation","error","valid","InputCheckerRegex","checked","render","onSubmitForm","node","mapStateToProps","userPhone","user","mapDispatchToProps","dispatch","action","setUserData","withConnect"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./../Authorization.scss\";\nimport UserActions from \"../../../actions/users/users.actions\";\nimport Validator from \"./../../../utils/validate\";\nimport Api from \"./../../../utils/requestClient/requests\";\nimport { get } from \"lodash\";\n\nclass AuthorizationStep1 extends Component {\n  constructor(props) {\n    super(props);\n    this.authorizationInput = React.createRef();\n    this.authorizationChecker = React.createRef();\n  }\n\n  state = {\n    asyncError: {\n      errorText: \"undefined request error\",\n      errorState: false\n    },\n\n    phone: {\n      // please it will translate to hebrew if it need\n      errorText: Validator.constants.PhoneErrorText,\n      errorState: false\n    },\n    checker: {\n      // please it will translate to hebrew if it need\n      errorText: Validator.constants.CheckboxErrorText,\n      errorState: false\n    }\n  };\n\n  // validatePhone is short validate callback function\n  validatePhone() {\n    const { authorizationInput } = this;\n    const inputValidation = Validator.validate.validate(\n      Validator.constants.IsraelPhoneNumberRegex,\n      authorizationInput.value,\n      Validator.constants.PhoneErrorValidation\n    );\n    if (inputValidation.error) {\n      this.setState((prevState, props) => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.phone,\n            ...{\n              phone: {\n                errorText: inputValidation.error,\n                errorState: true\n              }\n            }\n          }\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.phone,\n            ...{\n              phone: {\n                errorText: inputValidation.error,\n                errorState: false\n              }\n            }\n          }\n        };\n      });\n    }\n\n    return inputValidation.valid;\n  }\n\n  // validateChecker is short validate callback function\n  validateChecker() {\n    const { authorizationChecker } = this;\n    const inputValidation = Validator.validate.validate(\n      Validator.constants.InputCheckerRegex,\n      authorizationChecker.checked,\n      Validator.constants.CheckboxErrorText\n    );\n\n    if (inputValidation.error) {\n      this.setState((prevState, props) => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.checker,\n            ...{\n              checker: {\n                errorText: inputValidation.error,\n                errorState: true\n              }\n            }\n          }\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          ...{\n            ...prevState.checker,\n            ...{\n              checker: {\n                errorText: inputValidation.error,\n                errorState: false\n              }\n            }\n          }\n        };\n      });\n    }\n\n    return inputValidation.valid;\n  }\n\n  // onSubmitForm is action to submit form\n  onSubmitForm = e => {\n    e.preventDefault();\n\n    this.validatePhone();\n    this.validateChecker();\n\n    if (this.validatePhone() && this.validateChecker()) {\n      let phoneFormat = this.authorizationInput.value;\n      phoneFormat =\n        phoneFormat[0] === \"0\"\n          ? phoneFormat.replace(/^0/, \"+972\")\n          : phoneFormat;\n      const requestData = {\n        phone: phoneFormat,\n        device_type: \"web\",\n        device_name: \"web\",\n        os_version: \"1\",\n        is_agent: false\n      };\n      this.props.onSetUserData({ showModal: true });\n      Api.login(requestData)\n        .then(data => {\n          if (this.state.asyncError.errorState) {\n            this.setState(prevState => {\n              return {\n                ...prevState,\n                ...{\n                  ...prevState.asyncError,\n                  ...{\n                    asyncError: {\n                      errorText: \"\",\n                      errorState: false\n                    }\n                  }\n                }\n              };\n            });\n          }\n          data.data.phone = phoneFormat;\n          data.data.showModal = false;\n          this.props.onSetUserData(data.data);\n        })\n        .catch(err => {\n          this.props.onSetUserData({ showModal: false });\n          if (get(err, \"response.data.errorCode\") === \"BLOCKED_USER\") {\n            this.props.hendleBlockUser();\n          }\n          this.setState(prevState => {\n            return {\n              ...prevState,\n              ...{\n                ...prevState.asyncError,\n                ...{\n                  asyncError: {\n                    errorText: \"מספר הטלפון שהוזן אינו תקין\",\n                    errorState: true\n                  }\n                }\n              }\n            };\n          });\n        });\n    }\n  };\n\n  // render\n  render() {\n    return (\n      <Fragment>\n        <div className=\"authorization-block\">\n          <div className=\"authorization-block-form\">\n            <div className=\"authorization-block-title\">\n              <div className=\"authorization-title\">מספר טלפון להתחברות</div>\n            </div>\n            <form\n              className=\"authorization-form\"\n              id=\"authorization-form\"\n              onSubmit={e => this.onSubmitForm(e)}\n              noValidate\n            >\n              <div className=\"authorization-block-input\">\n                <input\n                  className=\"authorization-input-tel input-tel authorization-input\"\n                  type=\"tel\"\n                  autoFocus\n                  ref={node => (this.authorizationInput = node)}\n                  dir=\"ltr\"\n                />\n                {this.state.phone.errorState ? (\n                  <span className=\"authorization-input-error\">\n                    {this.state.phone.errorText}\n                  </span>\n                ) : null}\n                {this.state.asyncError.errorState ? (\n                  <span className=\"authorization-input-error\">\n                    {this.state.asyncError.errorText}\n                  </span>\n                ) : null}\n                {this.state.checker.errorState ? (\n                  <span className=\"authorization-input-error\">\n                    {this.state.checker.errorText}\n                  </span>\n                ) : null}\n              </div>\n              <div className=\"authorization-block-description\">\n                אנו נשלח אלייך קוד לאישור מספר הטלפון\n              </div>\n              <div className=\"authorization-block-checkbox\">\n                <input\n                  className=\"authorization-input-checkbox input-checkbox\"\n                  id=\"authorization-checkbox\"\n                  type=\"checkbox\"\n                  ref={node => (this.authorizationChecker = node)}\n                />\n                <label\n                  className=\"authorization-label-checkbox\"\n                  htmlFor=\"authorization-checkbox\"\n                >\n                  אישרתי את&nbsp;\n                  <a\n                    href=\"https://diffe-rent.s3-eu-west-1.amazonaws.com/%D7%AA%D7%A7%D7%A0%D7%95%D7%9F-+DiffeRent.pdf\"\n                    target=\"_blank\"\n                  >\n                    התקנון\n                  </a>\n                </label>\n              </div>\n              <div className=\"authorization-block-submit\">\n                <input\n                  className=\"authorization-submit input-submit btn-blue btn-large\"\n                  id=\"authorization-submit\"\n                  type=\"submit\"\n                  value=\"שליחה\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userPhone: state.user.phone\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetUserData: action => {\n      dispatch(UserActions.setUserData(action));\n    }\n  };\n};\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthorizationStep1);\n\nexport default withConnect;\n"]},"metadata":{},"sourceType":"module"}