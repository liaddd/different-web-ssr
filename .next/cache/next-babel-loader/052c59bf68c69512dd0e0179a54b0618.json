{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport Router from \"next/router\";\nimport \"./MyProfile.scss\";\nimport MyProfileEmpty from \"./MyProfileEmpty\";\nimport MyProfileWithOrders from \"./MyProfileWithOrders\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport { setContractsData } from \"../../actions/users/users.actions\";\nimport API from \"../../utils/requestClient/requests\";\nimport { logout } from \"../../actions/common/common.actions\";\n\nclass MyProfile extends Component {\n  componentDidMount() {\n    const token = get(this.props, \"user.auth.session_token\");\n\n    if (token) {\n      API.getContracts(token).then(res => {\n        this.props.onSetContracts(res.data);\n      }).catch(e => {\n        console.log(\"error\", e);\n\n        if (get(e, \"response.data.errorCode\") === \"UNAUTHORIZED\") {\n          this.props.onLogout();\n          Router.push(\"/\");\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      contracts,\n      userAuth,\n      fName,\n      lName\n    } = this.props;\n    return __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"bg-image myprofile-page\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"myprofile-header\"\n    }, __jsx(\"span\", {\n      className: \"myprofile-header-title\"\n    }, \"\\u05D4\\u05D3\\u05D9\\u05E8\\u05D5\\u05EA \\u05E9\\u05DC\\u05D9 \"), __jsx(\"span\", {\n      className: \"myprofile-sum\"\n    }, contracts ? contracts.length : 0)), contracts && contracts.length > 0 ? __jsx(MyProfileWithOrders, {\n      contracts: contracts,\n      lName: lName,\n      fName: fName\n    }) : __jsx(MyProfileEmpty, {\n      userAuth: userAuth\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    contracts: state.user.contracts,\n    userAuth: state.user.userAuth,\n    fName: state.user.first_name,\n    lName: state.user.last_name\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetContracts: action => {\n      dispatch(setContractsData(action));\n    },\n    onLogout: action => {\n      dispatch(logout(action));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProfile);","map":null,"metadata":{},"sourceType":"module"}